{
    "version": "https://jsonfeed.org/version/1",
    "title": "XGG • All posts by \"html基础\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2018/11/25/3001_CSS/",
            "url": "http://example.com/2018/11/25/3001_CSS/",
            "title": "CSS基础",
            "date_published": "2018-11-25T13:02:36.000Z",
            "content_html": "<p>🌸  <span style=\"font-size:bold;color:purple\">Welcome to XGG &amp; blog!</span><br>\n🔭  <span style=\"font-size:bold;color:purple\">When you have eliminated the impossible,whatever remains,however improbable,must be the truth.</span><br>\n📫  <span style=\"font-size:initial;color:purple\">If you get any problems when looking blog,you can find the answer in <a href=\"https://juejin.cn/user/2784392994882045\">稀土掘金</a> or you can ask me on <a href=\"https://github.com/LuckyWishes\">GitHub</a>.</span></p>\n<hr />\n<h4 id=\"src与href的区别\"><a class=\"markdownIt-Anchor\" href=\"#src与href的区别\">#</a> src 与 href 的区别</h4>\n<ul>\n<li>src\n<ul>\n<li>引用外部资源 (img、script、video、iframe)</li>\n<li>替换当前元素内容</li>\n<li>暂停其他资源的下载，同步加载执行</li>\n</ul>\n</li>\n<li>href\n<ul>\n<li>连接外部资源 (a、link)</li>\n<li>不会替换当前元素内容</li>\n<li>不会暂停其他资源的加载</li>\n</ul>\n</li>\n<li>src 是指向外部资源的位置，指向的内容会嵌⼊到⽂档中当前标签所在的位置，在请求 src 资源时会将其指向的资源下载并应⽤到⽂档内如 js 脚本、img 图⽚和 iframe 等元素。当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执⾏完毕，因此⼀般 js 脚本会放在底部⽽不是头部。<br>\nhref 是指向⽹络资源所在位置（的超链接，⽤来建⽴和当前元素或⽂档之间的连接，当浏览器识别到它他指向的⽂件时，就会异步下载资源，不会停⽌对当前⽂档的执行</li>\n</ul>\n",
            "tags": [
                "HTML基础"
            ]
        },
        {
            "id": "http://example.com/2018/11/06/2002_HTML/",
            "url": "http://example.com/2018/11/06/2002_HTML/",
            "title": "语义化标签了解",
            "date_published": "2018-11-06T01:32:12.000Z",
            "content_html": "<p>🌸  <span style=\"font-size:bold;color:purple\">Welcome to XGG &amp; blog!</span><br>\n🔭  <span style=\"font-size:bold;color:purple\">When you have eliminated the impossible,whatever remains,however improbable,must be the truth.</span><br>\n📫  <span style=\"font-size:initial;color:purple\">If you get any problems when looking blog,you can find the answer in <a href=\"https://juejin.cn/user/2784392994882045\">稀土掘金</a> or you can ask me on <a href=\"https://github.com/LuckyWishes\">GitHub</a>.</span></p>\n<hr />\n<h3 id=\"渐进增强与优雅降级的理解及区别\"><a class=\"markdownIt-Anchor\" href=\"#渐进增强与优雅降级的理解及区别\">#</a> 渐进增强与优雅降级的理解及区别</h3>\n<p><strong>渐进增强（Progressive Enhancement）：</strong><br>\n一开始就针对低版本浏览器进行构建页面，完成基本的功能，然后再针对高级浏览器进行效果、交互、追加功能达到更好的体验。<br>\n<strong>优雅降级（Graceful Degradation）：</strong><br>\n一开始就构建站点的完整功能，然后针对浏览器测试和修复。比如一开始使用 CSS3 的特性构建了一个应用，然后逐步针对各大浏览器进行 hack 使其可以在低版本浏览器上正常浏览。<br>\n<strong>两者区别</strong><br>\n 1、广义：<br>\n其实要定义一个基准线，在此之上的增强叫做渐进增强，在此之下的兼容叫优雅降级<br>\n 2、狭义：<br>\n渐进增强一般说的是使用 CSS3 技术，在不影响老浏览器的正常显示与使用情形下来增强体验，而优雅降级则是体现 html 标签的语义，以便在 js/css 的加载失败 / 被禁用时，也不影响用户的相应功能。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-comment\">/* 例子 */</span><br><span class=\"hljs-selector-class\">.transition</span> &#123; <span class=\"hljs-comment\">/*渐进增强写法*/</span><br>  -webkit-<span class=\"hljs-attribute\">transition</span>: all .<span class=\"hljs-number\">5s</span>;<br>     -moz-<span class=\"hljs-attribute\">transition</span>: all .<span class=\"hljs-number\">5s</span>;<br>       -o-<span class=\"hljs-attribute\">transition</span>: all .<span class=\"hljs-number\">5s</span>;<br>          <span class=\"hljs-attribute\">transition</span>: all .<span class=\"hljs-number\">5s</span>;<br>&#125;<br><span class=\"hljs-selector-class\">.transition</span> &#123; <span class=\"hljs-comment\">/*优雅降级写法*/</span><br>          <span class=\"hljs-attribute\">transition</span>: all .<span class=\"hljs-number\">5s</span>;<br>       -o-<span class=\"hljs-attribute\">transition</span>: all .<span class=\"hljs-number\">5s</span>;<br>     -moz-<span class=\"hljs-attribute\">transition</span>: all .<span class=\"hljs-number\">5s</span>;<br>  -webkit-<span class=\"hljs-attribute\">transition</span>: all .<span class=\"hljs-number\">5s</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h3 id=\"常见的兼容性问题\"><a class=\"markdownIt-Anchor\" href=\"#常见的兼容性问题\">#</a> 常见的兼容性问题</h3>\n<ol>\n<li margin:0;padding:0;=\"\">不同浏览器的标签默认的 margin 和 padding 不一样。*</li>\n<li>IE6 双边距 bug：块属性标签 float 后，又有横行的 margin 情况下，在 IE6 显示 margin 比设置的大。hack：display:inline; 将其转化为行内属性。</li>\n<li>设置较小高度标签（一般小于 10px），在 IE6，IE7 中高度超出自己设置高度。hack：给超出高度的标签设置 overflow:hidden; 或者设置行高 line-height 小于你设置的高度。</li>\n<li>Chrome 中文界面下默认会将小于 12px 的文本强制按照 12px 显示，可通过加入 CSS 属性 -webkit-text-size-adjust: none; 解决。</li>\n<li>超链接访问过后 hover 样式就不出现了，被点击访问过的超链接样式不再具有 hover 和 active 了。解决方法是改变 CSS 属性的排列顺序：L-V-H-A (love hate): a:link {} a:visited {} a:hover {} a:active {}</li>\n</ol>\n<h4 id=\"浏览器模式\"><a class=\"markdownIt-Anchor\" href=\"#浏览器模式\">#</a> 浏览器模式</h4>\n<ul>\n<li>怪异模式：页面以一种比较宽松的向后兼容的非标准行为</li>\n<li>接近标准模式：只有少数的怪异模式</li>\n<li>标准模式：由 HTML 和 CSS 的规范描述行为<br>\n <code>&lt;!DOCTYPE html&gt;</code>  唯一的作用是启用标准模式</li>\n</ul>\n<h4 id=\"标签的区别\"><a class=\"markdownIt-Anchor\" href=\"#标签的区别\">#</a> 标签的区别</h4>\n<ul>\n<li>strong：加重语气，b: 简单加粗，浏览器搜索引擎更侧重 strong 标签</li>\n<li>title：无明确意义，只表示标题；h1：层次明确的标题，对页面信息的抓取有很大的影响</li>\n<li>i 内容展示为斜体，em 表示强调文本</li>\n</ul>\n<h4 id=\"导入css文件方式及区别\"><a class=\"markdownIt-Anchor\" href=\"#导入css文件方式及区别\">#</a> 导入 CSS 文件方式及区别</h4>\n<ul>\n<li>内联方式</li>\n<li>嵌入方式</li>\n<li>外链方式 <code>link</code>\n<ul>\n<li><code>link</code>  是 html 标签，而 <code>@import</code>  是 css 的</li>\n<li>页面被加载时， <code>link</code>  会同时被加载，而 <code>@import</code>  引用的 css 会等到页面被加载完再加载</li>\n<li><code>link</code>  的权重高于 <code>@import</code>  的权重</li>\n</ul>\n</li>\n<li><code>import</code>  导入方式\n<ul>\n<li>该方式是 CSS 属性，只能加载 CSS</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"script标签中defer和async的区别\"><a class=\"markdownIt-Anchor\" href=\"#script标签中defer和async的区别\">#</a>  <code>script</code>  标签中 defer 和 async 的区别</h4>\n<ul>\n<li><code>&lt;script&gt;</code> : 浏览器会立即并执行相应的脚本，不会等待后续加载的文档元素，只要读取到就会开始加载、执行，这种情况就阻塞了后续文档的加载</li>\n<li><code>&lt;script defer&gt;</code> ：异步加载外部的 js 脚本文件，不会阻塞页面的解析；多个带 defer 属性的标签，按照加载顺序执行；加载后续文档的过程和 js 脚本的加载是并行进行的即异步的 (此时仅加载不执行)，js 脚本需要等到文档所有元素解析完成之后才执行，DOMContentLoaded 事件触发执行之前？？？</li>\n<li><code>&lt;script async&gt;</code> ：异步加载外部的 js 脚本文件，不会阻塞页面的解析；多个带 async 属性的标签，不能保证加载的顺序；表示后续文档的加载和执行与 js 脚本的加载和执行是并行进行的即异步执行；</li>\n</ul>\n",
            "tags": [
                "HTML基础"
            ]
        },
        {
            "id": "http://example.com/2018/11/05/2001_HTML/",
            "url": "http://example.com/2018/11/05/2001_HTML/",
            "title": "语义化标签了解",
            "date_published": "2018-11-05T05:32:31.000Z",
            "content_html": "<p>🌸  <span style=\"font-size:bold;color:purple\">Welcome to XGG &amp; blog!</span><br>\n🔭  <span style=\"font-size:bold;color:purple\">When you have eliminated the impossible,whatever remains,however improbable,must be the truth.</span><br>\n📫  <span style=\"font-size:initial;color:purple\">If you get any problems when looking blog,you can find the answer in <a href=\"https://juejin.cn/user/2784392994882045\">稀土掘金</a> or you can ask me on <a href=\"https://github.com/LuckyWishes\">GitHub</a>.</span></p>\n<hr />\n<ul>\n<li>概念： <code>合理正确的使用语义化标签来创建页面结构</code> ，即正确的标签做正确的事情</li>\n<li>优点：\n<ul>\n<li>无 CSS 样式编写时会呈现很好的内容效果</li>\n<li>代码结构清晰，易于阅读，便于团队协作开发与维护，也有利于屏幕阅读器渲染页面</li>\n<li>有利于搜索引擎优化 SEO，搜索引擎爬虫会根据不同的标签来赋予不同的权重</li>\n<li>提升用户体验，比如 title、alt 可以用于解释名词或者图片信息，label 标签灵活应用</li>\n</ul>\n</li>\n<li>标签 (切片元素)：header、nav、main、article、section、aside、footer\n<ul>\n<li><code>&lt;blockquote&gt;</code>  用来定义摘自另一个源的块引用，在该标签中的内容会被从常规文本中分离出来，默认会表现为左右两侧缩进的群本，缩近距离一般为 40 个像素 (即外边距 40px), 定义块引用，浏览器会在 blockquote 元素前后添加换行，并增加外边距，cite 属性标注引用的信息的来源文档或者相关信息的 URL</li>\n<li><code>&lt;header&gt;</code>  定义页面的介绍展示区域，网站 logo、主导航、搜索框等</li>\n<li><code>&lt;nav&gt;</code>  导航栏</li>\n<li><code>&lt;main&gt;</code>  一个页面只能使用一次</li>\n<li><code>&lt;article&gt;</code>  定义页面独立的内容，可以有自己的 header、footer、sections 等</li>\n<li><code>&lt;section&gt;</code>  用于标记文档的各个部分，例如长表单文章的章节或主要部分</li>\n<li><code>&lt;aside&gt;</code>  定义与主要内容相关的内容块，通常显示为侧边栏</li>\n<li><code>&lt;footer&gt;</code>  定义文档的底部区域，通常包括文档作者、著作权信息等</li>\n<li><code>&lt;figure&gt;</code>  标签规定独立的流内容 (图像、图表、照片、代码等), 元素的内容应该与主内容相关，但如果被删除，则不应对文档流产生影响</li>\n<li><code>&lt;figcaption&gt;</code>  标签定义  <code>&lt;figure&gt;</code>  元素的标题，元素应该被置于 “figure” 元素的第一个或最后一个子元素的位置</li>\n<li><code>&lt;small&gt;</code>  为较不重要的内容定义小字体，如果被包围的字体已经是字体模型所支持的最小字号，那么  <code>&lt;small&gt;</code>  标签将不起任何作用</li>\n<li><code>&lt;h1&gt;</code>  ~  <code>&lt;h6&gt;</code>  定义页面的标题，h1 具有最高等级，h6 最低</li>\n<li><code>&lt;strong&gt;</code>  把文本定义为语气更强的强调的内容，以表示内容的重要性</li>\n<li><code>&lt;em&gt;</code>  标记内容着重点（大量用于提升段落文本语义），通常呈现为斜体文字</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "HTML基础"
            ]
        },
        {
            "id": "http://example.com/2018/11/04/2004_HTML/",
            "url": "http://example.com/2018/11/04/2004_HTML/",
            "title": "HTML基础",
            "date_published": "2018-11-04T14:32:45.000Z",
            "content_html": "<p>🌸  <span style=\"font-size:bold;color:purple\">Welcome to XGG &amp; blog!</span><br>\n🔭  <span style=\"font-size:bold;color:purple\">When you have eliminated the impossible,whatever remains,however improbable,must be the truth.</span><br>\n📫  <span style=\"font-size:initial;color:purple\">If you get any problems when looking blog,you can find the answer in <a href=\"https://juejin.cn/user/2784392994882045\">稀土掘金</a> or you can ask me on <a href=\"https://github.com/LuckyWishes\">GitHub</a>.</span></p>\n<hr />\n<h4 id=\"flex-布局\"><a class=\"markdownIt-Anchor\" href=\"#flex-布局\">#</a> Flex 布局</h4>\n<p>布局的传统解决方案，基于盒状模型，依赖 display 属性 + position 属性 + float 属性。它对于那些特殊布局非常不方便，比如，垂直居中就不容易实现。<br>\nFlex 是 Flexible Box 的缩写，意为 &quot;弹性布局&quot;, 用来为盒状模型提供最大的灵活性。指定容器 display: flex 即可。 简单的分为容器属性和元素属性。<br>\n容器的属性：</p>\n<ul>\n<li>flex-direction：决定主轴的方向（即子 item 的排列方法）flex-direction: row | row-reverse | column | column-reverse;</li>\n<li>flex-wrap：决定换行规则 flex-wrap: nowrap | wrap | wrap-reverse;</li>\n<li flex-flow:=\"\" ||=\"\" ;=\"\">flex-flow： .box</li>\n<li>justify-content：对其方式，水平主轴对齐方式</li>\n<li>align-items：对齐方式，竖直轴线方向</li>\n<li>align-content</li>\n</ul>\n<p>项目的属性（元素的属性）：</p>\n<ul>\n<li>order 属性：定义项目的排列顺序，顺序越小，排列越靠前，默认为 0</li>\n<li>flex-grow 属性：定义项目的放大比例，即使存在空间，也不会放大</li>\n<li>flex-shrink 属性：定义了项目的缩小比例，当空间不足的情况下会等比例的缩小，如果 定义个 item 的 flow-shrink 为 0，则为不缩小</li>\n<li>flex-basis 属性：定义了在分配多余的空间，项目占据的空间。</li>\n<li>flex：是 flex-grow 和 flex-shrink、flex-basis 的简写，默认值为 0 1 auto。</li>\n<li>align-self：允许单个项目与其他项目不一样的对齐方式，可以覆盖</li>\n<li>align-items，默认属 性为 auto，表示继承父元素的 align-items 比如说，用 flex 实现圣杯布局</li>\n</ul>\n",
            "tags": [
                "HTML基础"
            ]
        },
        {
            "id": "http://example.com/2018/10/28/2003_HTML/",
            "url": "http://example.com/2018/10/28/2003_HTML/",
            "title": "HTML基础",
            "date_published": "2018-10-28T03:02:36.000Z",
            "content_html": "<p>🌸  <span style=\"font-size:bold;color:purple\">Welcome to XGG &amp; blog!</span><br>\n🔭  <span style=\"font-size:bold;color:purple\">When you have eliminated the impossible,whatever remains,however improbable,must be the truth.</span><br>\n📫  <span style=\"font-size:initial;color:purple\">If you get any problems when looking blog,you can find the answer in <a href=\"https://juejin.cn/user/2784392994882045\">稀土掘金</a> or you can ask me on <a href=\"https://github.com/LuckyWishes\">GitHub</a>.</span></p>\n<hr />\n<h3 id=\"网页笔记\"><a class=\"markdownIt-Anchor\" href=\"#网页笔记\">#</a> 网页笔记</h3>\n<p>[toc]</p>\n<h2 id=\"一-html\"><a class=\"markdownIt-Anchor\" href=\"#一-html\">#</a> 一、HTML</h2>\n<h3 id=\"1-bs和cs\"><a class=\"markdownIt-Anchor\" href=\"#1-bs和cs\">#</a> 1. B/S 和 C/S</h3>\n<p>B/S：浏览器中的网页（无需安装、无需更新、跨平台）</p>\n<p>C/S：移动端的 APP</p>\n<p>补充：</p>\n<p>客户端：用户通过客户端来使用软件</p>\n<p>服务器：服务器负责在远程处理业务逻辑</p>\n<p>服务器开发语言：Java、PHP、C#、Python、Node.js</p>\n<p>客户端形式：文字客户端、图形化界面、网页</p>\n<h3 id=\"2-特点bs\"><a class=\"markdownIt-Anchor\" href=\"#2-特点bs\">#</a> 2. 特点（B/S）</h3>\n<ul>\n<li>无需安装</li>\n<li>无需更新</li>\n<li>跨平台</li>\n</ul>\n<h3 id=\"3-简史\"><a class=\"markdownIt-Anchor\" href=\"#3-简史\">#</a> 3. 简史</h3>\n<p>​\t万维网的发明人：蒂姆伯纳斯李，制作网页的标准规范 W3C（万维网联盟）</p>\n<h3 id=\"4-结构htmlhypertext-markup-language\"><a class=\"markdownIt-Anchor\" href=\"#4-结构htmlhypertext-markup-language\">#</a> 4. 结构–HTML（Hypertext Markup Language）</h3>\n<p>​\tHTML：超文本标记语言</p>\n<h3 id=\"5-属性\"><a class=\"markdownIt-Anchor\" href=\"#5-属性\">#</a> 5. 属性</h3>\n<p>属性在开始标签里面写，属性是一个名值对；</p>\n<p>有些属性有属性值，有些属性没有属性值；</p>\n<p>​\t属性具有属性值，但是有一些属性没有属性值也对</p>\n<h3 id=\"6-文档声明\"><a class=\"markdownIt-Anchor\" href=\"#6-文档声明\">#</a> 6. 文档声明</h3>\n<p>&lt;! doctype html&gt; 放在第一行，告诉浏览器网页版本 HTML5</p>\n<p>注意：注释不能嵌套</p>\n<h3 id=\"7-进制\"><a class=\"markdownIt-Anchor\" href=\"#7-进制\">#</a> 7. 进制</h3>\n<p>所有数据在计算机中底层都是以二进制形式保存</p>\n<p>1 byte = 8 bit<br>\n1 kb（千字节）= 1024 byte<br>\n1 mb （兆字节）= 1024 kb<br>\n1 gb （吉字节）= 1024 mb<br>\n1 tb （特字节）= 1024 gb<br>\n1 pb = 1024 tb</p>\n<h3 id=\"8-编码\"><a class=\"markdownIt-Anchor\" href=\"#8-编码\">#</a> 8. 编码</h3>\n<head></head>网页的头部，标签里面的内容不显示在网页里面，主要帮助浏览器和搜索引擎来解析网页的\n<p>将字符转换为二进制码的过程称为编码</p>\n<p>将二进制码转换为字符的过程称为解码</p>\n<p>字符集（charset）编码和解码所采用的规则称为字符集，编码和解码所采用的字符集的不同会导致乱码现象</p>\n<p>常见的字符集：ASCII（美国标准码）、ISO88591（欧洲）、GBK（中国）、GB2312（中国）、UTF-8（万国码，所有国家均适用）</p>\n<p>设置编码字符格式：charset=“utf-8”</p>\n<meta charset= \"utf-8\"> \n告诉浏览器编码格式  \n</meta>\n<h3 id=\"9-标签文档\"><a class=\"markdownIt-Anchor\" href=\"#9-标签文档\">#</a> 9. 标签文档</h3>\n<p>目的查看标签的作用，网上可以查看</p>\n<p><a href=\"http://xn--www-e82fs70b28vt66a.w3school.com.cn\">建议查看 www.w3school.com.cn</a></p>\n<h3 id=\"10-实体-转义字符\"><a class=\"markdownIt-Anchor\" href=\"#10-实体-转义字符\">#</a> 10. 实体（ 转义字符）</h3>\n<p>实体查询和符号参考手册相关链接：<a href=\"https://www.w3school.com.cn/html/html_entities.asp\">https://www.w3school.com.cn/html/html_entities.asp</a></p>\n<p>在网页中编写多个空格会被浏览器默认为一个空格；若写特殊的字符时，需要使用转义字符</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\">//实体的语法<br><span class=\"hljs-symbol\">&amp;nbsp;</span>//空格<br><span class=\"hljs-symbol\">&amp;gt;</span>//大于号<br><span class=\"hljs-symbol\">&amp;lt;</span>//小于号<br><span class=\"hljs-symbol\">&amp;copy;</span>//版权符号<br></code></pre></td></tr></table></figure>\n<h3 id=\"11-meta标签\"><a class=\"markdownIt-Anchor\" href=\"#11-meta标签\">#</a> 11. meta 标签</h3>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\">meta：主要用于设置一些网页中的元数据，元数据不是给用户看的<br>charset：指定网页的字符集<br>name：指定的数据名称<br>content：制定的数据内容<br>keywords：网页关键字<br>description：用于网页的描述<br>http-equiv=&quot;X-UA-Compatible&quot;：将网页重定向到另一个网站<br></code></pre></td></tr></table></figure>\n<h3 id=\"12-标签元素\"><a class=\"markdownIt-Anchor\" href=\"#12-标签元素\">#</a> 12. 标签元素</h3>\n<p>块级元素：一般通过块级元素对网页进行布局</p>\n<p>页面中独占一行的元素是块级元素</p>\n<p>行内元素：一般包裹文字</p>\n<p>在页面中不会独占一行的元素为行内元素</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">hgroup</span>&gt;</span>标题组标签<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">hgroup</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">em</span>&gt;</span>加重标签<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">em</span>&gt;</span>\t\t//内联元素<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">blockquote</span>&gt;</span>长引用<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">blockquote</span>&gt;</span>//引用标签<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">q</span>&gt;</span>短引用<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">q</span>&gt;</span>//使用&quot;&quot;包裹起来<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>换行<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>不能放任何的块级元素<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">header</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">header</span>&gt;</span>网页的头部<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">main</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">main</span>&gt;</span>网页的主体部分<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">footer</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">footer</span>&gt;</span>网页的底部<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">aside</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">aside</span>&gt;</span>侧边栏内容<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">nav</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">nav</span>&gt;</span>网页的导航栏<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">article</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">article</span>&gt;</span>表示一个独立的文章<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">section</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">section</span>&gt;</span>表示一个独立的区块 <br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>行内元素，一般用于网页中选中文字<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">s</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">s</span>&gt;</span>有误文本<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>无序列表 <br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ol</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ol</span>&gt;</span>有序列表<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>列表项<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dl</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dl</span>&gt;</span>创建一个定义列表<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dt</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dt</span>&gt;</span>定义的内容<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dd</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dd</span>&gt;</span>对内容进行解释说明<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">herf</span>=<span class=\"hljs-string\">&quot;目标地址路径&quot;</span> <span class=\"hljs-attr\">target</span>=<span class=\"hljs-string\">&quot;打开的页面的属性&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>行内元素，可以嵌套除自身之外的任何元素超链接，实现网页之间的跳转<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">herf</span>=<span class=\"hljs-string\">&quot;#id的属性值&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>锚点跳转<br>herf:&quot;javascript:;&quot;作为herf的属性，点击超链接什么也不会发生<br>_self:在当前页面打开超链接<br>_blank:在新的页面打开超链接<br>./当前文件所在目录<br>../当前文件所在目录的上一级目录<br>锚链接的用法：<br>1. 本页面锚链接(使用#name跳转到对应锚点)<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;#top&quot;</span> <span class=\"hljs-attr\">target</span>=<span class=\"hljs-string\">&quot;_self&quot;</span>&gt;</span>这是一个超链接<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><br>2. 页面间锚链接(跳转到其他页面的指定位置，设置锚点)<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">herf</span>=<span class=\"hljs-string\">&quot;t.html#nav&quot;</span>&gt;</span>跳转到新页面指定部分<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><br>块级标签与行级标签的特点与区别:<br>块级标签自动换行，前后隔一行；行级标签不会自动换行，从左往右依次显示<br>块级标签的宽度默认是100%；行级标签的宽度由文字内容撑开<br>块级标签可以设置宽度、高度、边距等属性；行级标签不能设置上述属性<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;图片路径&quot;</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;图片描述&quot;</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">&quot;&quot;</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">&quot;&quot;</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;图片标识&quot;</span>&gt;</span>替换元素，基于块级元素与行内元素之间,成比例缩放，单位像素，一般在PC端不建议修改图片大小，在移动端需要修改图片<br>title 属性：设置图片的标题，当鼠标指在图片上后显示的文字<br>alt 属性：设置由于图片无法加载时显示的文字<br>align属性：设置图片周围文字相对于图片的位置<br>src：文件路径<br>1. 相对路径<br>2. 绝对路径<br>绝对路径只在当前计算机生效，若将网站转移服务器，则路径会失效。<br>通过绝对路径打开图片使用的是 file 协议，但网页中使用的是 http 协议，因此会出 现跨域问题，造成图片无法显示<br>3. 网络地址<br><br>图片格式：<br>jpeg（jpg）：支持的颜色比较丰富，不支持透明效果，不支持动图；一般用来显示照片<br>gif：支持的颜色比较少，支持简单透明，支持动图；颜色单一的图片，动图<br>png：支持颜色丰富，支持复杂透明，不支持动图<br>webp：谷歌推出的，专门用来显示网页图片的一种格式，具备其他图片格式的所有优点，文件较小，兼容性不好<br>base64：可以把图片转换为字符，通过字符的形式引入图片<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">iframe</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;内联网页路径&quot;</span> <span class=\"hljs-attr\">frameborder</span>=<span class=\"hljs-string\">&quot;0&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">iframe</span>&gt;</span> //frameborder表示内联网页的框架边框<br>音频文件：<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">audio</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;视频资源的路径&quot;</span> <span class=\"hljs-attr\">controls</span> <span class=\"hljs-attr\">autoplay</span> <span class=\"hljs-attr\">loop</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">audio</span>&gt;</span> <br>audio相关属性：<br>controls：是否允许用户控制播放 <br>autoplay：音频文件是否自动播放，该属性用的较少，一般页面无自动播放，用户体验不好<br>loop：音频是否循环播放<br>除了使用src来指定外部文件的路径以外，还可以使用source指定外部文件<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">audio</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">source</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;文件路径（MP3）&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;&quot;</span>&gt;</span>大部分浏览器<br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">source</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;文件路径（ogg）&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;&quot;</span>&gt;</span>小部分浏览器<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">audio</span>&gt;</span><br><br>IE8浏览器，该标签时间较早<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">embed</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;文件路径&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;文件类型（audio/MP3）&quot;</span>&gt;</span><br>视频文件：<br>方式一：<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">video</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">video</span>&gt;</span>    <br>方式二：<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">video</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">source</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;…….webm&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">source</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;…….MP4&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;&quot;</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">video</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p><strong>补充</strong></p>\n<ol>\n<li>\n<p>HTML5 新增结构标签及作用</p>\n<p>![截屏 2022-03-30 上午 9.06.20](/Users/xiaoyunfei/Library/Application Support/typora-user-images/ 截屏 2022-03-30 上午 9.06.20.png)</p>\n<p>![截屏 2022-03-30 上午 9.07.21](/Users/xiaoyunfei/Library/Application Support/typora-user-images/ 截屏 2022-03-30 上午 9.07.21.png)</p>\n</li>\n<li>\n<p>表格</p>\n<ol>\n<li>\n<p>​\t\t<tr>行</tr></p>\n</li>\n<li>\n<p>​        <th>表头单元格</th></p>\n</li>\n<li>\n<p>​        <td>普通单元格</td></p>\n</li>\n<li>\n<p>colspan：占有列（合并列）横向合并单元格</p>\n</li>\n<li>\n<p>rowspan：占有行（合并行）纵向合并单元格</p>\n</li>\n<li>\n<p>表格</p>\n<ol>\n<li>表头：thead</li>\n<li>主体：tbody</li>\n<li>底部：tfoot</li>\n</ol>\n</li>\n<li>\n<p><code>border-spacing</code> : 指定边框之间的距离</p>\n</li>\n<li>\n<p><code>border-collapse</code> : 设置边框的合并</p>\n</li>\n<li>\n<p><strong>不同行的样式设置</strong>： <code>tr:nth-child(odd)&#123;&#125;奇数行样式设置</code></p>\n</li>\n<li>\n<p>选择器知识点：如果表格中没有使用 <code>tbody</code>  而是直接使用 <code>tr</code> , 那么浏览器会自动创建一个 <code>tbody</code> , 并且将所有的 <code>tr</code>  放到 <code>tbody</code>  中，因此 <code>tr</code>  不是 <code>table</code>  的子元素</p>\n</li>\n<li>\n<p><code>display:table-cell</code>  设置为单元格进行居中操作</p>\n</li>\n<li>\n<p>表格属性</p>\n<p>![截屏 2022-03-30 上午 9.08.18](/Users/xiaoyunfei/Library/Application Support/typora-user-images/ 截屏 2022-03-30 上午 9.08.18.png)</p>\n</li>\n<li>\n<p>行和列的属性 (<em>当表格属性与行列属性冲突时，以行列属性为准</em>)</p>\n<p>![截屏 2022-03-30 上午 9.10.13](/Users/xiaoyunfei/Library/Application Support/typora-user-images/ 截屏 2022-03-30 上午 9.10.13.png)</p>\n</li>\n<li>\n<p><a href=\"https://blog.csdn.net/Rice_w/article/details/123696681?csdn_share_tail=%7B%22type%22%3A%22blog%22%2C%22rType%22%3A%22article%22%2C%22rId%22%3A%22123696681%22%2C%22source%22%3A%22Rice_w%22%7D&amp;ctrtid=3BNev\">表格的结构化和直列化</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.csdn.net/Rice_w/article/details/123696681?csdn_share_tail=%7B%22type%22%3A%22blog%22%2C%22rType%22%3A%22article%22%2C%22rId%22%3A%22123696681%22%2C%22source%22%3A%22Rice_w%22%7D&amp;ctrtid=3BNev\">HTML5 表单</a></p>\n</li>\n<li>\n<p>表单知识</p>\n<ol>\n<li>\n<p><code>form</code>  的属性 <code>action</code>  表单要提交的服务器地址</p>\n</li>\n<li>\n<p>文本框</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\">1. 文本框数据要提交到服务器中，必须要为元素指定name属性<br>2. 表单例子<br> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">&quot;movies.html&quot;</span>&gt;</span><br>    姓名: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;username&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>    密码: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;password&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;password&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>    <span class=\"hljs-comment\">&lt;!-- 类似选择框，必须要指定一个value属性，value属性最终会作为用户的填写信息发送给服务器，checked默认选中 --&gt;</span><br>   <span class=\"hljs-comment\">&lt;!-- autocapitalize=&quot;off&quot;:关闭自动补全</span><br><span class=\"hljs-comment\">         readonly:将表单项设置为只读，数据会提交</span><br><span class=\"hljs-comment\">         disabled:将表单项设置为禁用，数据不会提交</span><br><span class=\"hljs-comment\">         autofocus:设置表单项自动获取焦点\t--&gt;</span><br>    性别: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;radio&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;sex&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;男&quot;</span>&gt;</span><br>         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;radio&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;sex&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;女&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>    多选框: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;test&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;11&quot;</span>&gt;</span><br>           <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;test&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;22&quot;</span>&gt;</span><br>           <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;test&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;33&quot;</span>&gt;</span><br>           <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;test&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;44&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>    下拉列表: <br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;demo&quot;</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;111&quot;</span>&gt;</span>111<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>  <br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;222&quot;</span>&gt;</span>222<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>  <br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;333&quot;</span> <span class=\"hljs-attr\">selected</span>&gt;</span>333<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>  <br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;444&quot;</span>&gt;</span>444<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>  <br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>    颜色选择器: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;color&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;color&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>    电子邮件: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;email&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;email&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>    时间: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;datetime-local&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;time&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;submit&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;提交&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;reset&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;重置&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;button&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;按钮&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"二-css\"><a class=\"markdownIt-Anchor\" href=\"#二-css\">#</a> 二、CSS</h2>\n<h3 id=\"1-简介\"><a class=\"markdownIt-Anchor\" href=\"#1-简介\">#</a> 1. 简介</h3>\n<p>层叠样式：网页实际上是一个多层的结构，通过 CSS 可以为网页的每一层设置样式，最终我们只看到最上面一层，总之，css 就是设置设置网页中的样式</p>\n<h3 id=\"2-css编写位置\"><a class=\"markdownIt-Anchor\" href=\"#2-css编写位置\">#</a> 2. CSS 编写位置</h3>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\">1. 内联样式（开发时不推荐使用）<br>\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;color:red;&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>2. 内部样式<br>\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span>相关样式<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>3. 外部样式（使用浏览器的缓存机制，加快网页的加载速度，提升用户 体验）<br>\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;stylesheet&quot;</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;外部css文件地址&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"3-选择器\"><a class=\"markdownIt-Anchor\" href=\"#3-选择器\">#</a> 3. 选择器</h3>\n<p>通过选择器可以选中页面中的指定元素进而设置相关样式<br>\n声明块：通过声明块来指定为元素设置样式</p>\n<ol>\n<li>元素选择器\n<ol>\n<li>作用：根据标签名选择元素</li>\n<li>语法： <code>标签名&#123;&#125;</code></li>\n</ol>\n</li>\n<li>id 选择器 (id 属性值不能重复)\n<ol>\n<li>作用：根据元素的 id 属性值选中一个元素</li>\n<li>语法： <code>id属性值&#123;&#125;</code></li>\n</ol>\n</li>\n<li>类选择器（可以为一个元素设置多个 class 属性值，且使用空格隔开）\n<ol>\n<li>作用：根据元素的 class 属性值选中一组元素</li>\n<li>语法： <code>.class属性值</code></li>\n</ol>\n</li>\n<li>通配选择器\n<ol>\n<li>作用：选中页面中所有的元素</li>\n<li>语法： <code>*</code></li>\n</ol>\n</li>\n<li>复合选择器 (交集选择器)\n<ol>\n<li>选择同时符合多个条件的元素 (注意：交集选择器中如果有元素选择器，必须使用元素选择器开头)</li>\n<li>语法： <code>选择器1选择器2选择器n&#123;&#125;</code></li>\n</ol>\n</li>\n<li>选择器分组（并集选择器）\n<ol>\n<li>同时选择多个选择器对应的元素</li>\n<li><code>选择器1,选择器2,选择器n&#123;&#125;</code></li>\n</ol>\n</li>\n<li>子元素选择器\n<ol>\n<li>作用：选中指定父元素的指定子元素</li>\n<li>语法： <code>父元素 &gt; 子元素</code></li>\n</ol>\n</li>\n<li>后代元素选择器\n<ol>\n<li>作用：选中指定元素内的指定后代</li>\n<li>语法： <code>祖先 后代</code></li>\n</ol>\n</li>\n<li>兄弟选择器 1\n<ol>\n<li>作用：选择紧靠后面的兄弟元素</li>\n<li>语法： <code>前一个元素 + 后一个元素</code></li>\n</ol>\n</li>\n<li>兄弟选择器 2\n<ol>\n<li>作用：选择后面所有的兄弟元素</li>\n<li>语法： <code>兄元素~弟元素</code></li>\n</ol>\n</li>\n<li>属性选择器\n<ol>\n<li><code>[属性名]</code>  选择含有指定属性的元素</li>\n<li><code>[属性名 = 属性值]</code>  选择含有指定属性和属性值的元素</li>\n<li><code>[属性名 ^= 属性值]</code>  选择属性值以指定值开头的元素</li>\n<li><code>[属性名 $= 属性值]</code>  选择属性值以指定值结尾的元素</li>\n<li><code>[属性名 *= 属性值]</code>  选择属性值中含有某值的元素</li>\n</ol>\n</li>\n<li>伪类选择器 (伪类不存在的类，特殊的类)\n<ol>\n<li>伪类用来描述一个元素的<strong>特殊状态</strong>，例如：第一个元素，被点击的元素、鼠标移入的元素……</li>\n<li>一般使用 <code>:</code>  开头</li>\n<li><code>:first-child</code>  第一个子元素（参考对象为所有的子元素进行排序）</li>\n<li><code>:last-child</code>  最后一个子元素（参考对象为所有的子元素进行排序）</li>\n<li><code>:nth-child()</code>  选中第 n 个子元素（参考对象为所有的子元素进行排序）\n<ol>\n<li><code>n</code>  第 n 个，n 的范围是 0~+∞</li>\n<li><code>2n+1或even</code>  表示选中偶数位的元素</li>\n<li><code>2n+1或odd</code>  表示选中奇数位的元素</li>\n</ol>\n</li>\n<li><code>:first-of-type</code>  作用同上（同类型元素中进行排序）</li>\n<li><code>:last-of-type</code>  作用同上（同类型元素中进行排序）</li>\n<li><code>:nth-of-type</code>  作用同上（同类型元素中进行排序）</li>\n<li><code>:not()</code>  否定伪类，将符合条件的元素从选择器中去除</li>\n<li>超链接的伪类\n<ol>\n<li><code>a:link</code>  表示未访问过的链接（正常链接）</li>\n<li><code>a:visited</code>  表示访问过的链接（由于隐私的原因，所以 visited 伪类只能修改链接颜色）</li>\n<li><code>:hover</code>  表示鼠标移入的状态</li>\n<li><code>:active</code>  表示鼠标点击、激活的状态</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>伪元素选择器\n<ol>\n<li>伪元素：表示页面中特殊的并不真实存在的元素（<strong>特殊位置</strong>）</li>\n<li>一般使用 <code>::</code>  开头</li>\n<li><code>::first-letter</code>  表示第一个字母</li>\n<li><code>::first-line</code>  表示第一行</li>\n<li><code>::selection</code>  表示选中的内容</li>\n<li><code>::before</code>  元素的开始（必须结合 content 属性使用）</li>\n<li><code>::after</code>  元素的最后（必须结合 content 属性使用）</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"4-样式的继承\"><a class=\"markdownIt-Anchor\" href=\"#4-样式的继承\">#</a> 4. 样式的继承</h3>\n<p>我们为一个元素设置的样式同时也会应用到它的后代元素的上，继承是发生在祖先后代之间</p>\n<p><strong>注意</strong>：不是所有的元素都会被继承，比如背景相关的样式、布局相关的样式均不会被继承</p>\n<h3 id=\"5-选择器的权重\"><a class=\"markdownIt-Anchor\" href=\"#5-选择器的权重\">#</a> 5. 选择器的权重</h3>\n<p>当通过不同的选择器选中相同元素时，并且给相同的样式设置不同的值时，有可能发生样式冲突，这个时候有选择器的权重决定</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\">内联样式&gt;id选择器&gt;类和伪类选择器&gt;元素选择器&gt;通配选择器&gt;继承的样式（无优先级）<br>比较优先级时，需要将所有的优先级进行相加运算，最后优先级越高则越优先显示（分组选择器是单独计算的）<br>选择器的累加不会超过最大数量级，类选择器再高也不会超过id选择器，若是优先级相同，则优先使用靠下的样式<br>使用!important时，获得最高优先级，超过内联样式的优先级，慎用！<br></code></pre></td></tr></table></figure>\n<h3 id=\"6-单位\"><a class=\"markdownIt-Anchor\" href=\"#6-单位\">#</a> 6. 单位</h3>\n<p>像素：屏幕实际是由许多的小点构成，不同屏幕大小的像素是不同的，像素越小的屏幕显示效果越清晰</p>\n<p>百分比：属性值设置为相对于父元素属性的百分比，设置百分比可以可以使子元素跟随父元素的改变而改变</p>\n<p>em：相对于自身元素的字体大小计算，1em = 1 font-size，em 会根据字体大小的改变而改变（一般默认 font-size = 16 像素）</p>\n<p>rem：相对于根元素的字体大小计算</p>\n<h3 id=\"7-颜色\"><a class=\"markdownIt-Anchor\" href=\"#7-颜色\">#</a> 7. 颜色</h3>\n<ol>\n<li>css 里面可以使用颜色名，但是不是很方便描述</li>\n<li>常见一般使用 RGB 值，通过三种颜色进行调整，每一种颜色值的范围是 0~255;</li>\n<li>rgba：增加了一个值，一共有四个值，最后一个表示不透明度（1 表示完全不透明、0 表示完全透明、.5 表示半透明）</li>\n<li>十六进制颜色值（语法：#aabbcc 简写为 #abc）</li>\n<li>HSL 值：H: 色相、S：饱和度、L：亮度；HSLA 值：不透明度</li>\n</ol>\n<h3 id=\"8-文档流\"><a class=\"markdownIt-Anchor\" href=\"#8-文档流\">#</a> 8. 文档流</h3>\n<ol>\n<li>文档流是一个位置，在最底层，文档流是网页的基础，我们创建的元素默认都在文档流中进行排列，元素分为两个状态在文档流中、不在文档流中</li>\n<li>块级元素\n<ol>\n<li>块级元素会在页面中独占一行（自上向下垂直排列）</li>\n<li>默认宽度是父级元素的全部（把父元素撑满）</li>\n<li>默认高度被内容撑开（子元素撑开）</li>\n</ol>\n</li>\n<li>行内元素\n<ol>\n<li>行内元素不会独占页面的一行，只占自身的大小</li>\n<li>行内元素在页面里面自左向右水平排列，如果一行之中不能排列完，则元素会换到第二行继续自左向右水平排列</li>\n<li>行内元素默认的宽度和高度都是被内容水平撑开的</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"9-盒子模型\"><a class=\"markdownIt-Anchor\" href=\"#9-盒子模型\">#</a> 9. 盒子模型</h3>\n<ol>\n<li>\n<p>盒子是有四个部分组成分别为：content：内容区、padding：内边距、border：边框、margin：外边距</p>\n</li>\n<li>\n<p>weith：内容区的宽度、height：内容区的高度</p>\n</li>\n<li>\n<p>边框属于盒子的边缘，边框的大小会影响盒子的大小，需要设置边框的样式</p>\n</li>\n<li>\n<p>内边距的设置会影响盒子的大小，背景颜色会延伸到内边距上</p>\n</li>\n<li>\n<p>外边距不会影响盒子可见框的大小，但是外边距会影响盒子的位置，默认情况下设置左和上会影响该元素，若是设置右和下会影响其他的元素，margin 会影响盒子的实际占用空间</p>\n</li>\n<li>\n<p>水平方向的布局</p>\n</li>\n<li>\n<p>垂直方向的布局</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-attribute\">border-style</span>:dotted;<br><span class=\"hljs-attribute\">border-bottom-width</span>: <span class=\"hljs-number\">1px</span>;//专门指定某一个边的宽度<br><span class=\"hljs-attribute\">border-color</span>: red;<br><span class=\"hljs-attribute\">border-width</span>: <span class=\"hljs-number\">1px</span>;<br><span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid red;//边框三个属性简写<br><span class=\"hljs-attribute\">padding</span>：<span class=\"hljs-number\">1px</span> <span class=\"hljs-number\">1px</span> <span class=\"hljs-number\">1px</span> <span class=\"hljs-number\">1px</span>;//内边距三个属性简写<br><span class=\"hljs-attribute\">margin</span>：<span class=\"hljs-number\">1px</span> <span class=\"hljs-number\">1px</span> <span class=\"hljs-number\">1px</span> <span class=\"hljs-number\">1px</span>;//外边距三个属性简写<br><br>水平方向的布局<br><span class=\"hljs-attribute\">margin-left</span>+<span class=\"hljs-attribute\">border-left</span>+<span class=\"hljs-attribute\">padding-left</span>+<span class=\"hljs-attribute\">width</span>+<span class=\"hljs-attribute\">margin</span>-rigth+<span class=\"hljs-attribute\">border</span>-rigth+<span class=\"hljs-attribute\">padding</span>-rigth=父元素内容区的宽度<br>//若是不够默认会修改<span class=\"hljs-attribute\">margin</span>-rigth,有auto优先auto<br>//如果两个外边距设置为auto，宽度固定值，则会将外边距设置为相同的值，可以利用这个特点是子元素在父元素中居中 <br><span class=\"hljs-attribute\">width</span>:<span class=\"hljs-number\">10px</span>;<br><span class=\"hljs-attribute\">margin</span>:<span class=\"hljs-number\">0</span> auto;<br><br>垂直方向的布局<br>如果子元素的大小超过了父元素，则子元素会从父元素中溢出，可以使用是<span class=\"hljs-attribute\">overflow</span>属性进行处理<br><span class=\"hljs-attribute\">overflow</span>:hidden;<br>visible:默认值，子元素会从父元素中显示出来<br>hidden:隐藏，溢出内容将会被裁减不会显示出来<br>scroll:生成两个滚动条，通过滚动条进行查看内容<br>auto:根据需要生成滚动条<br><br>overflow-x:<span class=\"hljs-number\">10px</span>;//水平大小<br><span class=\"hljs-attribute\">overflow-y</span>:<span class=\"hljs-number\">10px</span>;//垂直大小<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"10垂直外边距折叠块级0\"><a class=\"markdownIt-Anchor\" href=\"#10垂直外边距折叠块级0\">#</a> 10. 垂直外边距折叠（块级 0）</h3>\n<ol>\n<li>\n<p>相邻的垂直方向外边距会发生重叠现象</p>\n</li>\n<li>\n<p>兄弟元素</p>\n<ol>\n<li>兄弟元素间的相邻垂直外边距会取两者之间较大值（两者都是正值）</li>\n<li>特殊情况\n<ol>\n<li>相邻的外边距一正一负，则取两者之和</li>\n<li>相邻的外边距都是负值，取两者中绝对值较大的</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>父子元素</p>\n<ol>\n<li>父子元素间相邻外边距，子元素会传递父元素（上外边距）</li>\n<li>父子外边距的折叠会影响页面的布局，必须进行处理（设置为兄弟元素即可）</li>\n</ol>\n</li>\n<li>\n<p>行内元素</p>\n<ol>\n<li>\n<p>行内元素不支持设置宽度和高度</p>\n</li>\n<li>\n<p>行内元素可以设置 padding、border、margin，垂直方向的 padding、border、margin 不会影响页面布局</p>\n</li>\n<li>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>//display用来设置元素显示的类型</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>可选值为：</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>inline 将元素设置为行内元素</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>block 将元素设置为块元素</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>inline-block 将元素设置为行内块元素，行内块既可以设置高度和宽度，也不会独占一行</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>table 将元素设置为一个表格</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>none 元素不在页面中显示</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>//visibility 用来设置元素的显示状态</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>可选值：</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>visible 元素在页面中正常显示</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>hidden 元素在页面中隐藏不显示，但依然占据页面中的位置</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>//去除项目符号</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token property\">list-style</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>//去除a链接的下划线</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>//设置居中</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>50px auto<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>//子元素的行高和父元素高相同，则实现垂直居中效果</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 48px<span class=\"token punctuation\">;</span>//父元素</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 48px<span class=\"token punctuation\">;</span>//子元素</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><br><span class=\"hljs-comment\">### 11.浏览器的默认样式</span><br><br><span class=\"hljs-number\">1</span>. 通常浏览器会为元素设置一些默认样式，有时候默认样式会影响页面布局，通常情况下会去除浏览器的默认样式（PC端）<br><br><span class=\"hljs-comment\">### 12.盒子的大小设置</span><br><br><span class=\"hljs-number\">1</span>. ```css<br>   <span class=\"hljs-regexp\">//</span>默认情况下，盒子的大小是由内容区、内边距、边框共同决定<br>   <span class=\"hljs-regexp\">//</span>box-sizing用来设置盒子尺寸的计算方法（设置width和height的作用）<br>   box-sizing: border-box;<span class=\"hljs-regexp\">//</span>默认值，宽度和高度用来设置内容区的大小<br>   <br>   <span class=\"hljs-regexp\">//</span>宽度和高度用来设置整个盒子可见框的大小<br>   box-sizing: content-box;<br></code></pre></td></tr></table></figure></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ol>\n<h3 id=\"13-轮廓阴影和圆角\"><a class=\"markdownIt-Anchor\" href=\"#13-轮廓阴影和圆角\">#</a> 13. 轮廓阴影和圆角</h3>\n<ol>\n<li>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>//用来设置元素的轮廓线，使用方法和border一模一样</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>//区别是轮廓不会影响可见框的大小</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token property\">outline</span><span class=\"token punctuation\">:</span>1px solid red<span class=\"token punctuation\">;</span>//轮廓的设置</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token property\">outline-offset</span><span class=\"token punctuation\">:</span> //轮廓距离边框的距离</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>//用来设置元素的阴影效果，阴影不会影响页面布局</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>//第一个值，水平偏移量，设置阴影的水平位置</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>//第二个值，垂直偏移量，设置阴影的垂直位置</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>//第三个值，阴影的模糊半径</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>//第四个值，阴影的颜色</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 10px 10px 10px red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>//用来设置圆角，圆角设置圆的半径大小（若为两个值可以考虑为椭圆）</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 1px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>//该设置为一个圆</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\"><br><span class=\"hljs-section\">### 14.浮动元素</span><br><br><span class=\"hljs-bullet\">1.</span> 通过浮动使一个元素向其父元素的左侧和右侧移动<br><span class=\"hljs-bullet\">2.</span> 使用<span class=\"hljs-code\">`float`</span>属性设置元素浮动，none：不浮动、left：向左浮动、right：向右浮动<br><span class=\"hljs-bullet\">3.</span> 元素使用浮动之后会脱离文档流，不占用文档流的位置，水平布局的等式不需要成立<br><span class=\"hljs-bullet\">4.</span> 浮动的特点<br><span class=\"hljs-bullet\">   1.</span> 浮动元素不会覆盖文字，文字会自动环绕在浮动元素的周围，利用浮动实现文字环绕效果<br><span class=\"hljs-bullet\">   2.</span> 浮动元素会完全脱离文档流，不再占用文档流的位置<br><span class=\"hljs-bullet\">   3.</span> 设置浮动之后元素就会向父元素左侧或者右侧移动，不会从父元素中移出<br><span class=\"hljs-bullet\">   4.</span> 浮动元素向左或向右移动时，不会超过它前面的其他浮动元素<br><span class=\"hljs-bullet\">   5.</span> 如果浮动元素上边是一个没有浮动的块元素，则浮动元素无法上移<br><span class=\"hljs-bullet\">   6.</span> 浮动元素不会超过上边浮动的兄弟元素，最多和兄弟元素一样高<br><span class=\"hljs-bullet\">5.</span> 作用：让页面中的元素水平排列<br><span class=\"hljs-bullet\">6.</span> 脱离文档流的特点（不需要区分块级和行内元素）<br><span class=\"hljs-bullet\">   1.</span> 块元素<br><span class=\"hljs-bullet\">      1.</span> 块级元素不在独占页面的一行<br><span class=\"hljs-bullet\">      2.</span> 脱离文档流之后块级元素的宽度和高度默认都被内容撑开<br><span class=\"hljs-bullet\">   2.</span> 行内元素<br><span class=\"hljs-bullet\">      1.</span> 行内元素脱离文档流之后变成块级元素，特点和块级元素一样<br><br><span class=\"hljs-section\">### 15. 块级元素水平排列可以使用浮动设置</span><br><br><span class=\"hljs-section\">### 16.高度塌陷和BFC</span><br><br><span class=\"hljs-code\">```css</span><br><span class=\"hljs-code\">// 高度塌陷问题</span><br><span class=\"hljs-code\">在浮动布局中，父元素的高度默认是被子元素撑开的，当子元素浮动后，其会完全脱离文档流，子元素从文档流中脱离，将会无法撑开父元素的高度，导致父元素的高度丢失，父元素高度丢失以后，下面的元素会自动上移，导致页面布局混乱，所以高度塌陷是浮动布局中常见的问题，必须进行处理</span><br><span class=\"hljs-code\">BFC:(Block Formatting Context)\t块级格式化环境</span><br><span class=\"hljs-code\">BFC是一个css中的隐含属性，可以为一个元素开启BFC，开启BFC之后该元素变成一个独立的布局区域</span><br></code></pre></td></tr></table></figure></pre></td></tr></table></figure></li>\n</ol>\n<p>元素开启 BFC 的特点：</p>\n<ol>\n<li>开启 BFC 的元素不会被浮动元素所覆盖</li>\n<li>开启 BFC 的元素子元素和父元素外边距不会重叠</li>\n<li>开启 BFC 的元素可以包含浮动的子元素</li>\n</ol>\n<p>可以通过一些特殊方式开启 BFC</p>\n<ol>\n<li>\n<p>设置元素的浮动（宽度丢失）【不推荐】 <code>例如：float:left;</code></p>\n</li>\n<li>\n<p>将元素设置为行内元素【不推荐】 <code>例如：display:inline-block</code></p>\n</li>\n<li>\n<p>将元素的 <code>overflow</code>  设置为一个非 <code>visible</code>  的值     <code>例如：overflow:hidden</code></p>\n</li>\n<li>\n<p>使用 <code>after伪类解决高度塌陷即 元素名::after</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-selector-tag\">div</span><span class=\"hljs-selector-pseudo\">::after</span>&#123;<br>  <span class=\"hljs-attribute\">content</span>:<span class=\"hljs-string\">&#x27;&#x27;</span>;<br>  <span class=\"hljs-attribute\">display</span>:bolck;<br>  <span class=\"hljs-attribute\">clear</span>:both;<br>&#125;<br>//after伪元素默认是行内元素，需要设置为块级元素<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>解决外边距重叠问题</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-selector-tag\">div</span><span class=\"hljs-selector-pseudo\">::before</span>&#123;<br>  <span class=\"hljs-attribute\">content</span>:<span class=\"hljs-string\">&#x27;&#x27;</span>;<br>  <span class=\"hljs-attribute\">display</span>:table;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>clearfix类</code> 可以同时解决高度塌陷和外边距重叠</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-selector-class\">.clearfix</span><span class=\"hljs-selector-pseudo\">::before</span>,<span class=\"hljs-selector-class\">.clearfix</span><span class=\"hljs-selector-pseudo\">::after</span>&#123;<br>  <span class=\"hljs-attribute\">content</span>:<span class=\"hljs-string\">&#x27;&#x27;</span>;<br>  <span class=\"hljs-attribute\">display</span>:table;<br>  <span class=\"hljs-attribute\">clear</span>:both;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"17清除浮动\"><a class=\"markdownIt-Anchor\" href=\"#17清除浮动\">#</a> 17. 清除浮动</h3>\n<ol>\n<li>\n<p>作用：清除浮动元素对当前元素所产生的影响</p>\n</li>\n<li>\n<p>可选值：</p>\n<ol>\n<li><code>left</code> ：清除左侧浮动元素对当前元素所产生的影响</li>\n<li><code>right</code> ：清除左侧浮动元素对当前元素所产生的影响</li>\n<li><code>both</code> ：清除两侧浮动元素对当前元素所产生最大影响的那侧</li>\n</ol>\n</li>\n<li>\n<p>原理</p>\n<p>设置清除浮动元素以后，浏览器会自动为元素添加一个上外边距，使其位置不受影响</p>\n</li>\n</ol>\n<h3 id=\"18定位更加高级的布局手段可以摆放到页面的任何位置\"><a class=\"markdownIt-Anchor\" href=\"#18定位更加高级的布局手段可以摆放到页面的任何位置\">#</a> 18. 定位：更加高级的布局手段，可以摆放到页面的任何位置</h3>\n<ol>\n<li>\n<p><code>position属性设置</code></p>\n<ol>\n<li><code>static</code>  默认值，元素是静止的，未开启定位</li>\n<li><code>relative</code> ：开启元素的相对定位</li>\n<li><code>absolute</code> ：开启元素的绝对定位</li>\n<li><code>fixed</code> ：开启元素的固定定位</li>\n<li><code>sticky</code> ：开启元素的粘滞定位</li>\n</ol>\n</li>\n<li>\n<p>静态定位 <code>position:static</code></p>\n<ol>\n<li>取消原有定位，对定位进行覆盖</li>\n<li><strong>设置不设置有什么区别</strong>？？？</li>\n</ol>\n</li>\n<li>\n<p>相对定位 <code>position:relative</code></p>\n<ol>\n<li>开启相对定位后，不设置偏移量不会发生任何变化</li>\n<li>相对定位是参照于元素在文档流中的位置进行定位的</li>\n<li>相对定位会提升元素的层级</li>\n<li>相对定位元素不会脱离文档流</li>\n<li>相对定位不会改变元素的性质，块依然是块，行内依然为行内</li>\n<li>偏移量\n<ol>\n<li>top：定位元素和定位位置上边的距离</li>\n<li>bottom：定位元素和定位位置下边的距离</li>\n<li>left：定位元素和定位位置左侧的距离</li>\n<li>right：定位元素和定位位置右侧的距离</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>绝对定位 <code>position:absolute</code></p>\n<ol>\n<li>\n<p>开启绝对定位后，不设置偏移量不会发生任何变化</p>\n</li>\n<li>\n<p>绝对定位元素会脱离文档流</p>\n</li>\n<li>\n<p>绝对定位改变元素的性质，行内元素变成块级元素，块的宽高被内容撑开</p>\n</li>\n<li>\n<p>绝对定位会提升元素的层级</p>\n</li>\n<li>\n<p>绝对定位元素是相对于其包含块进行定位的</p>\n</li>\n<li>\n<p>包含块</p>\n<ol>\n<li>正常情况下，包含块就是距离当前元素最近的祖先元素</li>\n<li>绝对定位的包含块就是距离当前元素开启了定位的祖先元素，如果所有的祖先元素都没有开启定位则根元素就是它的包含块（html：根元素、初始包含块）</li>\n</ol>\n</li>\n<li>\n<p><strong>补充：水平方向的公式 和垂直方向的公式</strong></p>\n<ol>\n<li>\n<p><code>margin-left</code> 、 <code>border-left</code> 、 <code>padding-left</code> 、 <code>width</code> 、 <code>margin-right</code> 、 <code>border-right</code> 、 <code>padding-right</code>  之和等于包含块内容区的宽度</p>\n</li>\n<li>\n<p>开启决定定位之后公式左边需要添加 <code>left</code> 、 <code>right</code>  等于包含块内容区的宽度（可设置 auto 的属性 <code>margin</code> 、 <code>width</code> 、 <code>left</code> 、 <code>right</code> ）</p>\n</li>\n<li>\n<p>如果 <code>left</code> 、 <code>right</code>  的默认值是 <code>auto</code> ，等式不满足的时候自动调整这两个值</p>\n</li>\n<li>\n<p>垂直方向和水平方向相同</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">//水平居中<br>  <span class=\"hljs-attribute\">position</span>: absolute;<br>  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;<br>  <span class=\"hljs-attribute\">right</span>: <span class=\"hljs-number\">0</span>;<br>  <span class=\"hljs-attribute\">margin-left</span>: auto;<br>  <span class=\"hljs-attribute\">margin-right</span>: auto;<br><br>//垂直居中<br>  <span class=\"hljs-attribute\">position</span>: absolute;<br>  <span class=\"hljs-attribute\">top</span>:<span class=\"hljs-number\">0</span>;<br>  <span class=\"hljs-attribute\">bottom</span>:<span class=\"hljs-number\">0</span>;<br>  <span class=\"hljs-attribute\">margin-top</span>: auto;<br>  <span class=\"hljs-attribute\">margin-bottom</span>: auto;<br><span class=\"hljs-number\">1</span>. 父元素存在相对定位 <br><span class=\"hljs-selector-class\">.box1</span>&#123;<br>  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">300px</span>;<br>  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">300px</span>;<br>  <span class=\"hljs-attribute\">background-color</span>: aqua;<br>  <span class=\"hljs-attribute\">position</span>: relative;//父元素中要开启相对定位<br>&#125;<br><span class=\"hljs-selector-class\">.box2</span>&#123;<br>  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">60px</span>;<br>  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">60px</span>;<br>  <span class=\"hljs-attribute\">background-color</span>: red;<br>  <span class=\"hljs-attribute\">position</span>: absolute;<br>  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;<br>  <span class=\"hljs-attribute\">right</span>: <span class=\"hljs-number\">0</span>;<br>  <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;<br>  <span class=\"hljs-attribute\">bottom</span>: <span class=\"hljs-number\">0</span>;<br>  <span class=\"hljs-attribute\">margin</span>: auto;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>固定定位 <code>position:fixed</code></p>\n<ol>\n<li>特殊的绝对定位，部分特点和绝对定位一样</li>\n<li>固定定位永远参照与浏览器的视口进行定位</li>\n<li>固定定位的元素不会随着网页的滚动条滚动</li>\n</ol>\n</li>\n<li>\n<p>粘滞定位 <code>position:sticky</code></p>\n<ol>\n<li>兼容性不太好，部分特点和相对定位一样</li>\n<li>粘滞定位可以在元素到达某个位置时将其固定</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"19元素的层级\"><a class=\"markdownIt-Anchor\" href=\"#19元素的层级\">#</a> 19. 元素的层级</h3>\n<ol>\n<li>定位层级都是相同的，不分绝对定位还是相对定位</li>\n<li>设置透明 <code>background-color: rgba(255, 0, 0, .3);</code></li>\n<li>开启定位的元素可以利用 <code>z-index:1;</code>  给元素设置层级（里面是一个整数，值越大元素就越优先显示）</li>\n<li>如果元素的优先级相同，那么就优先显示靠下的元素；祖先元素的层级再高也不会覆盖后代元素</li>\n</ol>\n<h3 id=\"20轮播图练习\"><a class=\"markdownIt-Anchor\" href=\"#20轮播图练习\">#</a> 20. 轮播图练习</h3>\n<ol>\n<li>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&lt;a class=<span class=\"token string\">\"active\"</span> href=<span class=\"token string\">\"#\"</span>>&lt;/a>//active默认激活</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token property\">background-clip</span><span class=\"token punctuation\">:</span> border-box<span class=\"token punctuation\">;</span>//将背景颜色设置到内容区，边框和内边距不在有背景颜色</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid transparent<span class=\"token punctuation\">;</span>//边框为透明色</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><br>### <span class=\"hljs-number\">21</span>.字体族<br><br><span class=\"hljs-number\">1</span>. ```css<br>   问题：<br>   <span class=\"hljs-number\">1</span>. 加载速度<br>   <span class=\"hljs-number\">2</span>. 版权<br>   <span class=\"hljs-number\">3</span>. 字体格式<br>   <span class=\"hljs-keyword\">@font-face</span>&#123;<br>   <span class=\"hljs-comment\">/* 指定字体的名字 */</span><br>   <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">&#x27;Courier New&#x27;</span>, Courier, monospace;<br>   <span class=\"hljs-comment\">/* 服务器中字体的路径 */</span><br>   <span class=\"hljs-attribute\">src</span>:<span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">&quot;字体路径&quot;</span>);<br>   &#125;<br>   字体相关的样式<br>   <span class=\"hljs-number\">1</span>. <span class=\"hljs-attribute\">color</span>\t\t设置字体颜色<br>   <span class=\"hljs-number\">2</span>. <span class=\"hljs-attribute\">font-size</span>\t\t设置字体大小<br>   \t\t单位：<br>   \t\t\t\t<span class=\"hljs-selector-tag\">em</span>：相当于当前元素的一个<span class=\"hljs-attribute\">font-size</span><br>   \t\t\t\trem：相当于根元素的一个<span class=\"hljs-attribute\">font-size</span><br>   <span class=\"hljs-number\">3</span>. <span class=\"hljs-attribute\">font-family</span>\t\t字体族（字体的格式）<br>   \t\t可选值：<br>   \t\t\t\t\tserif\t\t衬线字体<br>   \t\t\t\t\tsans-serif\t\t非衬线字体<br>   \t\t\t\t\tmonospace\t\t等宽字体<br>   指定字体的类型，浏览器会自动使用该类型下的字体<br>   <span class=\"hljs-attribute\">font-family</span>  可以指定多个字体，多个字体间使用，隔开。若第一个无效时依次尝试去<br></code></pre></td></tr></table></figure></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"22图标字体将图标直接设置为字体class类-实体-伪元素三种方式\"><a class=\"markdownIt-Anchor\" href=\"#22图标字体将图标直接设置为字体class类-实体-伪元素三种方式\">#</a> 22. 图标字体：将图标直接设置为字体（ <code>class类</code> 、实体、伪元素三种方式）</h3>\n<ol>\n<li>\n<p>通过伪元素来设置图标字体</p>\n<ol>\n<li>\n<p>找到要设置图标的元素通过 <code>before</code>  和 <code>after</code>  选中</p>\n</li>\n<li>\n<p>在属性 <code>content</code>  中设置字体编码</p>\n</li>\n<li>\n<p>设置字体样式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-selector-tag\">li</span><span class=\"hljs-selector-pseudo\">::before</span>&#123;<br>\t<span class=\"hljs-attribute\">content</span>:<span class=\"hljs-string\">&#x27;\\f1b0&#x27;</span>;<br>  <span class=\"hljs-attribute\">font-family</span>:<span class=\"hljs-string\">&#x27;字体样式&#x27;</span>;//fab、fas等<br>  <span class=\"hljs-attribute\">font-weight</span>:<span class=\"hljs-number\">900px</span>;<br>&#125;<br>或<br>&lt;<span class=\"hljs-selector-tag\">span</span> class=&quot;fas&quot;&gt;&amp;<span class=\"hljs-selector-id\">#x</span>图标的编码&lt;/<span class=\"hljs-selector-tag\">span</span>&gt;//另一种方式<br><br>阿里图标字体库的使用方式<br><span class=\"hljs-number\">1</span>. 直接使用类 class = iconfont<br><span class=\"hljs-number\">2</span>. 使用伪元素的方式 <br><span class=\"hljs-selector-tag\">li</span><span class=\"hljs-selector-pseudo\">::before</span>&#123;<br>\t<span class=\"hljs-attribute\">content</span>:<span class=\"hljs-string\">&#x27;\\f1b0&#x27;</span>;<br>  <span class=\"hljs-attribute\">font-family</span>:<span class=\"hljs-string\">&#x27;字体样式&#x27;</span>;//fab、fas等<br>  <span class=\"hljs-attribute\">font-weight</span>:<span class=\"hljs-number\">900px</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"23文本样式的相关设置\"><a class=\"markdownIt-Anchor\" href=\"#23文本样式的相关设置\">#</a> 23. 文本样式的相关设置</h3>\n<ol>\n<li>\n<p>行高的设置</p>\n<ol>\n<li>\n<p>可以将行高和高度设置相同的值，使单行文字在一个元素中垂直居中</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-attribute\">height</span>:<span class=\"hljs-number\">100px</span><br>line-height:<span class=\"hljs-number\">100px</span>;<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>行高是指文字占有的实际高度，可以通过 line-height 来设置行高，行高可以指定一个大小 (em、px), 也可以设置一个整数，表示为字体的整数倍</p>\n</li>\n<li>\n<p>行高设置文字的行间距，行间距 = 行高 - 字体大小</p>\n</li>\n<li>\n<p>字体框：字体存在的格子，可以通过 font-size 设置字体框的高度</p>\n</li>\n<li>\n<p>行高会在字体框的上下平均分配</p>\n</li>\n</ol>\n</li>\n<li>\n<p>字体的简写属性</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-attribute\">font</span>:字体大小/行高(可省略) 字体族<br>font-weight:字重(字体的加粗)<br>\t可选值<br>\t\t\tnormal\t默认值，不加粗<br>\t\t\tbold\t加粗<br>\t\t\t<span class=\"hljs-number\">100</span>~<span class=\"hljs-number\">900</span>级别<br>font-style:字体的风格<br>\t\t\tnormal\t正常<br>\t\t\titalic\t斜体<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>文本的水平和垂直对齐</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-number\">1</span>. <span class=\"hljs-attribute\">text-align</span>  文本的水平对齐<br>\t可选值<br>\t\t<span class=\"hljs-attribute\">left</span>\t\t左侧对齐<br>\t\t<span class=\"hljs-attribute\">right</span>\t\t右侧对齐<br>\t\tcenter\t居中对齐\t<br>\t\tjustify\t两端对齐<br><span class=\"hljs-number\">2</span>. <span class=\"hljs-attribute\">vertical-align</span>\t设置元素垂直对齐的方式<br>\t可选值<br>\t\tbaseline\t默认值，基线对齐<br>\t\t<span class=\"hljs-attribute\">top</span>\t\t\t\t顶部对齐<br>\t\t<span class=\"hljs-attribute\">bottom</span>\t\t底部对齐<br>\t\tmiddle\t\t居中对齐<br>附加:若是图片和父元素存在缝隙，可以使用vertical-align:bottom;解决<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>文本样式的设置</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-number\">1</span>. <span class=\"hljs-attribute\">text-decoration</span>  设置文本修饰<br>\t可选值<br>\t\t<span class=\"hljs-attribute\">none</span>\t无下划线<br>\t\tunderline\t\t下划线<br>\t\tline-through\t删除线<br>\t\toverline\t\t\t上划线<br>\t\t例:text-decoration:underline red dotted;<br><span class=\"hljs-number\">2</span>. <span class=\"hljs-attribute\">white-space</span>\t设置网页如何处理空白<br>\t可选值<br>\t\t<span class=\"hljs-attribute\">normal</span>\t正常<br>\t\tnowrap\t不换行<br>\t\tpre \t\t保留空白<br><span class=\"hljs-number\">3</span>. 显示省略号的效果<br><span class=\"hljs-attribute\">white-space</span>: nowrap;//文本不换行<br><span class=\"hljs-attribute\">overflow</span>: hidden;//多余的文本进行隐藏<br><span class=\"hljs-attribute\">text-overflow</span>: ellipsis;//使用省略号进行替换<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"24京东顶部导航条总结学习\"><a class=\"markdownIt-Anchor\" href=\"#24京东顶部导航条总结学习\">#</a> 24. 京东顶部导航条总结学习</h3>\n<ol>\n<li>\n<p><code>box-shadow</code>  属性详解</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">值</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><em>h-shadow</em></td>\n<td style=\"text-align:left\">必需。水平阴影的位置。允许负值。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><em>v-shadow</em></td>\n<td style=\"text-align:left\">必需。垂直阴影的位置。允许负值。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><em>blur</em></td>\n<td style=\"text-align:left\">可选。模糊距离。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><em>spread</em></td>\n<td style=\"text-align:left\">可选。阴影的尺寸。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><em>color</em></td>\n<td style=\"text-align:left\">可选。阴影的颜色。请参阅 CSS 颜色值。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">inset</td>\n<td style=\"text-align:left\">可选。将外部阴影 (outset) 改为内部阴影。</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ol>\n<h3 id=\"25背景\"><a class=\"markdownIt-Anchor\" href=\"#25背景\">#</a> 25. 背景</h3>\n<ol>\n<li>\n<p><code>background-color:</code>  设置背景颜色</p>\n</li>\n<li>\n<p><code>background-image:</code>  设置背景图片</p>\n<ol>\n<li>可以同时设置颜色和图片，背景颜色将会成为图片的背景颜色</li>\n<li>背景的图片小于元素：背景图片将会自动在元素中平铺，X 轴和 Y 轴方向平铺</li>\n<li>背景的图片大于元素：背景图片将会无法完全显示</li>\n<li>背景的图片等于元素：直接正常显示</li>\n</ol>\n</li>\n<li>\n<p><code>background-repeat:</code>  设置背景重复的方式</p>\n<ol>\n<li><code>默认值repeat</code> : 背景将会沿着 x 轴和 y 轴方向重复</li>\n<li><code>repeat-x</code> : 沿着 x 轴方向重复</li>\n<li><code>repeat-y</code> : 沿着 y 轴方向重复</li>\n<li><code>no-repeat</code> : 背景图片不重复</li>\n</ol>\n</li>\n<li>\n<p><code>background-position:</code>  设置背景图片的位置</p>\n<ol>\n<li><code>top</code> 、 <code>left</code> 、 <code>right</code> 、 <code>bottom</code> 、 <code>center</code>  同时指定两个值，若只指定一个值，则第二值会和第一个值相同</li>\n<li>通过偏移量来指定背景图片的位置： <code>水平方向的偏移量</code> 、 <code>垂直方向的偏移量</code></li>\n</ol>\n</li>\n<li>\n<p><code>background-clip</code> : 设置背景范围</p>\n<ol>\n<li><code>border-box</code> : 默认值，背景会出现在边框的下边</li>\n<li><code>padding-box</code> : 背景不会出现在边框下边，只出现在内容区和内边距</li>\n<li><code>content-box</code> : 背景只会出现在内容区</li>\n</ol>\n</li>\n<li>\n<p><code>background-origin</code> : 背景图片的偏移量计算原点</p>\n<ol>\n<li><code>padding-box</code> : 默认值， <code>background-position</code>  从内边距出开始计算</li>\n<li><code>border-box</code> : 背景图片的偏移量从边框处开始计算</li>\n<li><code>content-box</code> : 背景图片的偏移量从内容区处开始计算</li>\n</ol>\n</li>\n<li>\n<p><code>background-size</code> : 设置背景图片的大小，第一个值表示宽度，第二值表示高度，若只写一个，则第二个值默认是 auto</p>\n<ol>\n<li><code>contain</code> : 图片比例不变，将图片在元素中完整显示</li>\n<li><code>cover</code> : 图片比例不变，将元素铺满</li>\n</ol>\n</li>\n<li>\n<p><code>background-attachment</code> : 背景图片是否跟随元素移动</p>\n<ol>\n<li><code>scroll</code> : 默认值，背景图片会跟随元素移动</li>\n<li><code>fixed</code> : 背景图片固定在页面中，不会随元素移动</li>\n</ol>\n</li>\n<li>\n<p><code>background</code> : 属性简写，无顺序要求</p>\n<ol>\n<li>background-size 必须写在 background-position 的后面，并且时候 <code>/</code>  隔开</li>\n<li>background-origin 要写在 background-clip 的前面</li>\n</ol>\n</li>\n<li>\n<p>图片属于网页中的外部资源，外部资源都需要浏览器单独发送请求加载，浏览器家在外部资源是按需加载的，用则加载，不用则不加载。解决多个图片因请求时长而出现的闪烁问题，可以将多个小图片同意保存到一个大图片中，然后通过调整 <code>background-position</code>  来显示特定的图片称为 <code>CSS-Sprite</code> , 这种图称为雪碧图</p>\n</li>\n<li>\n<p>雪碧图特点：一张图片里有包含多个图片，一次性将多个图片加载进页面，降低请求的次数，加快访问速度，提升用户的体验</p>\n</li>\n<li>\n<p>渐变：<strong>渐变是图片，需要通过 background-image 来设置</strong></p>\n<ol>\n<li>\n<p>线性渐变</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-number\">1</span>.线性渐变，需要沿着一条直线发生变化：linear-gradient()<br><span class=\"hljs-attribute\">background-image</span>: <span class=\"hljs-built_in\">linear-gradient</span>(red,yellow)<br>指定渐变的方向：to left,to right,to bottom,to top,deg度数，turn圈<br>可以同时指定多个颜色，多个颜色默认情况下平均分布，也可以手动指定渐变的分布情况<br><span class=\"hljs-number\">2</span>.线性渐变，可以平铺的线性渐变：<span class=\"hljs-built_in\">repeating-linear-gradient</span>()<br>background-image: <span class=\"hljs-built_in\">repeating-linear-gradient</span>(red,yellow <span class=\"hljs-number\">25px</span>)<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>径向渐变</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-number\">1</span>.径向渐变(放射性效果)radial-gradient()<br><span class=\"hljs-attribute\">background-image</span>: <span class=\"hljs-built_in\">radial-gradient</span>(red,yellow <span class=\"hljs-number\">50px</span>)<br>默认情况下径向渐变的形状根据元素的形状来计算的，正方形--圆形，长方形--椭圆形，也可以手动设置径向渐变的大小：circle、ellipse；渐变位置<span class=\"hljs-built_in\">radial-gradient</span>(大小 at 位置，颜色 位置，颜色 位置)<br>大小:circle 圆形、ellipse 椭圆形、farthest-side 远边、farthest-corner 远角、closest-side 近边、closest-corner 近角<br>位置:top、right、left、center、bottom<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n",
            "tags": [
                "HTML基础"
            ]
        }
    ]
}