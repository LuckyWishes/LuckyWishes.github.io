{
    "version": "https://jsonfeed.org/version/1",
    "title": "XGG&Blog • All posts by \"vue\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2021/05/11/Vue/",
            "url": "http://example.com/2021/05/11/Vue/",
            "title": "Vue",
            "date_published": "2021-05-11T12:39:44.000Z",
            "content_html": "<p>🌸  <span style=\"font-size:bold;color:purple\">Welcome to XGG &amp; blog!</span><br>\n🔭  <span style=\"font-size:bold;color:purple\">When you have eliminated the impossible,whatever remains,however improbable,must be the truth.</span><br>\n📫  <span style=\"font-size:initial;color:purple\">If you get any problems when looking blog,you can find the answer in <a href=\"https://juejin.cn/user/2784392994882045\">稀土掘金</a> or you can ask me on <a href=\"https://github.com/LuckyWishes\">GitHub</a>.</span></p>\n<hr />\n<h5 id=\"vue生命周期的理解\"><a class=\"markdownIt-Anchor\" href=\"#vue生命周期的理解\">#</a> Vue 生命周期的理解？</h5>\n<p>每个 <code>Vue</code>  实例在创建时都会经过一系列的初始化过程， <code>vue</code>  的生命周期钩子，就是说在达到某一阶段或条件时去触发的函数，目的就是为了完成一些动作或者事件</p>\n<ul>\n<li><code>create阶段</code> ：vue 实例被创建<br>\n <code>beforeCreate</code> : 最初调用触发，创建前，此时 data 和 methods 中的数据都还没有初始化，data 和 events 都不能用<br>\n <code>created</code> ： 创建完毕，data 中有值，未挂载，data 和 events 已经初始化好，data 已经具有响应式；在这里可以发送请求</li>\n<li><code>mount阶段</code> ： vue 实例被挂载到真实 DOM 节点<br>\n <code>beforeMount</code> ：在模版编译之后，渲染之前触发，可以发起服务端请求，去数据，ssr 中不可用，基本用不上这个 hook<br>\n <code>mounted</code> : 在渲染之后触发，此时可以操作 DOM，并能访问组件中的 DOM 以及 $ref,SSR 中不可用</li>\n<li><code>update阶段</code> ：当 vue 实例里面的 data 数据变化时，触发组件的重新渲染<br>\n <code>beforeUpdate</code>  : 更新前，在数据变化后，模版改变前触发，切勿使用它监听数据变化<br>\n <code>updated</code> ：更新后，在数据改变后，模版改变后触发，常用于重渲染案后的打点，性能检测或触发 vue 组件中非 vue 组件的更新</li>\n<li><code>destroy阶段</code> ：vue 实例被销毁<br>\n <code>beforeDestroy</code> ：实例被销毁前，组件卸载前触发，此时可以手动销毁一些方法，可以在此时清理事件、计时器或者取消订阅操作<br>\n <code>destroyed</code> : 卸载完毕后触发，销毁后，可以做最后的打点或事件触发操作</li>\n</ul>\n<h4 id=\"组件生命周期\"><a class=\"markdownIt-Anchor\" href=\"#组件生命周期\">#</a> 组件生命周期</h4>\n<blockquote>\n<p>生命周期（父子组件） 父组件 beforeCreate --&gt; 父组件 created --&gt; 父组件 beforeMount --&gt; 子组件 beforeCreate --&gt; 子组件 created --&gt; 子组件 beforeMount --&gt; 子组件 mounted --&gt; 父组件 mounted --&gt; 父组件 beforeUpdate --&gt; 子组件 beforeDestroy–&gt; 子组件 destroyed --&gt; 父组件 updated</p>\n</blockquote>\n<p><strong>加载渲染过程</strong> 父 beforeCreate-&gt; 父 created-&gt; 父 beforeMount-&gt; 子 beforeCreate-&gt; 子 created-&gt; 子 beforeMount-&gt; 子 mounted-&gt; 父 mounted</p>\n<p><strong>挂载阶段</strong> 父 created-&gt; 子 created-&gt; 子 mounted-&gt; 父 mounted</p>\n<p><strong>父组件更新阶段</strong> 父 beforeUpdate-&gt; 父 updated</p>\n<p><strong>子组件更新阶段</strong> 父 beforeUpdate-&gt; 子 beforeUpdate-&gt; 子 updated-&gt; 父 updated</p>\n<p><strong>销毁阶段</strong> 父 beforeDestroy-&gt; 子 beforeDestroy-&gt; 子 destroyed-&gt; 父 destroyed</p>\n",
            "tags": [
                "Vue"
            ]
        }
    ]
}