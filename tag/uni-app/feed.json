{
    "version": "https://jsonfeed.org/version/1",
    "title": "XGG&Blog • All posts by \"uni-app\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2021/02/01/10002_UniApp/",
            "url": "http://example.com/2021/02/01/10002_UniApp/",
            "title": "uni-app",
            "date_published": "2021-02-01T12:39:44.000Z",
            "content_html": "<p>🌸  <span style=\"font-size:bold;color:purple\">Welcome to XGG &amp; blog!</span><br>\n🔭  <span style=\"font-size:bold;color:purple\">When you have eliminated the impossible,whatever remains,however improbable,must be the truth.</span><br>\n📫  <span style=\"font-size:initial;color:purple\">If you get any problems when looking blog,you can find the answer in <a href=\"https://juejin.cn/user/2784392994882045\">稀土掘金</a> or you can ask me on <a href=\"https://github.com/LuckyWishes\">GitHub</a>.</span></p>\n<hr />\n<h5 id=\"4-小程序的语法特点\"><a class=\"markdownIt-Anchor\" href=\"#4-小程序的语法特点\">#</a> 4. 小程序的语法特点</h5>\n<ol>\n<li>\n<p>小程序特点概述</p>\n<p>模块：具备特定功能的 js 文件，有目的的拆分，需要用到哪个功能就引入哪个模块；<br>\n组件：具备特定功能效果的代码集合<br>\n没有 DOM；一切基于组件化开发<br>\n一个页面可以由一个或者多个组件组成， 组件不能代表页面，一个页面里面只有一个组件也不无法代替<br>\n ** 面试题 注意：使用 HTML 描述组件化是什么？ **<br>\n 每一个 HTML 标签就是一个组件，一个完整的页面就是由多个组件组成；体积小，单个压缩包体积不能大于 2M，否则无法上线</p>\n<p><strong>小程序 4 个重要文件：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">(<span class=\"hljs-number\">1</span>) *.<span class=\"hljs-property\">js</span><br>(<span class=\"hljs-number\">2</span>) *.<span class=\"hljs-property\">wxml</span>--&gt;view结构--&gt;html<br>(<span class=\"hljs-number\">3</span>) *.<span class=\"hljs-property\">wxss</span>--&gt;view样式--&gt;css<br>(<span class=\"hljs-number\">4</span>) *.<span class=\"hljs-property\">json</span>--&gt;view数据--&gt;json文件<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>小程序适配方案（rpx：响应式像素单位）</strong></li>\n<li>小程序适配单位：rpx</li>\n<li>规定任何屏幕下宽度为 750rpx</li>\n<li>小程序会根据屏幕的宽度不同自动计算 rpx 值的大小</li>\n<li>iPhone6 下，1rpx = 1 物理像素 = 0.5px</li>\n</ul>\n</li>\n<li>\n<p>小程序配置</p>\n<ol>\n<li>\n<p>桌面新建文件夹，导入微信开发者工具，进入其页面，了解顶部一栏的相关功能</p>\n</li>\n<li>\n<p>project.config.json： 项目的配置文件<br>\n一般不需要修改，若需要修改建议使用图形化界面（即开发工具）修改去设置就可以</p>\n</li>\n<li>\n<p>全局配置<br>\n小程序根目录下的  <code>app.json</code>  文件用来对微信小程序进行全局配置。文件内容为一个 JSON 对象，有以下<a href=\"https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html\"><strong>属性</strong></a>：<br>\n必填属性：pages：页面路径列表、sitemapLocation：指明 sitemap.json 的位置</p>\n</li>\n<li>\n<p>页面配置<br>\n每一个小程序页面也可以使用  <code>.json</code>  文件来对本页面的窗口表现进行配置。页面中配置项在当前页面会覆盖  <code>app.json</code>  的  <code>window</code>  中相同的配置项。文件内容为一个 JSON 对象，有以下 **<a href=\"https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/page.html\"> 属性</a> **：</p>\n</li>\n<li>\n<p>sitemap 配置<br>\n小程序根目录下的  <code>sitemap.json</code>  文件用于配置小程序及其页面是否允许被微信索引，文件内容为一个 JSON 对象，如果没有  <code>sitemap.json</code>  ，则默认为所有页面都允许被索引； <code>sitemap.json</code>  有以下 **<a href=\"https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/sitemap.html\"> 属性</a> **：必填属性：rules [对象]：索引规则列表（rules 配置项指定了索引规则，每项规则为一个 JSON 对象，一般属性 actions:allow，pages: 页面路径）</p>\n<p><strong>注意</strong>：微信现已开放小程序内搜索，开发者可以通过  <code>sitemap.json</code>  配置，或者管理后台页面收录开关来配置其小程序页面是否允许微信索引。当开发者允许微信索引时，微信会通过爬虫的形式，为小程序的页面内容建立索引。当用户的搜索词条触发该索引时，小程序的页面将可能展示在搜索结果中。 爬虫访问小程序内页面时，会携带特定的 user-agent： <code>mpcrawler</code>  及<a href=\"https://developers.weixin.qq.com/miniprogram/dev/reference/scene-list.html\">场景值</a>： <code>1129</code> 。需要注意的是，若小程序爬虫发现的页面数据和真实用户的呈现不一致，那么该页面将不会进入索引中。</p>\n<p>具体配置说明</p>\n<ol>\n<li>页面收录设置：可对整个小程序的索引进行关闭，小程序管理后台 - 功能 - 页面内容接入 - 页面收录开关；<a href=\"https://mp.weixin.qq.com/wxopen/readtemplate?t=config/collection_agreement_tmpl\">详情</a></li>\n<li>sitemap 配置：可对特定页面的索引进行关闭</li>\n</ol>\n</li>\n<li>\n<p>小程序文件：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">├── app.js（APP(&#123;&#125;)：注册整个小程序应用）<br>├── app.json （对象：第一项属性使用数组表示，pages即为页面路径）<br>├── app.wxss<br>├── pages<br>│   │── index<br>│   │   ├── index.wxml<br>│   │   ├── index.js(Page(&#123;&#125;):注册当前页面的实例)<br>│   │   ├── index.json（当前页面的配置）<br>│   │   └── index.wxss<br>│   └── logs<br>│       ├── logs.wxml<br>│       └── logs.js<br>└── utils（封装功能函数）<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n<h5 id=\"5-小程序的语法特点\"><a class=\"markdownIt-Anchor\" href=\"#5-小程序的语法特点\">#</a> 5. 小程序的语法特点</h5>\n<ol>\n<li>\n<p>数据绑定</p>\n<ol>\n<li>\n<p>初始化数据</p>\n<ol>\n<li>\n<p>页面.js 的 data 选项（小程序页面使用的数据都会向 data 去要，所以页面上想要有什么数据就要放入 data 中 ）</p>\n</li>\n<li>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span><span class=\"token string\">'hello world!'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>code￼<span class=\"token number\">2</span><span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li>\n<p><strong>补充：小程序相关的数据绑定</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">小程序<br>\t<span class=\"hljs-number\">1.</span> data中初始化数据<br>  <span class=\"hljs-number\">2.</span> 修改数据<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">setData</span>(),修改数据的行为始终始终是同步的<br>\t<span class=\"hljs-number\">3.</span> 数据流：单项（<span class=\"hljs-title class_\">Model</span>---&gt;<span class=\"hljs-title class_\">View</span>）<br>vue<br>\t<span class=\"hljs-number\">1.</span> data中初始化数据<br>  <span class=\"hljs-number\">2.</span> 修改数据<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">key</span> = value<br>\t<span class=\"hljs-number\">3.</span> 数据流：<br>  \t<span class=\"hljs-number\">1.</span> vue是单向数据流<span class=\"hljs-title class_\">Model</span>---&gt;<span class=\"hljs-title class_\">View</span><br>\t\t<span class=\"hljs-number\">2.</span> <span class=\"hljs-title class_\">Vue</span>中实现了双向数据绑定：v-model<br><span class=\"hljs-title class_\">React</span><br>\t<span class=\"hljs-number\">1.</span> state中初始化状态数据<br>  <span class=\"hljs-number\">2.</span> 修改数据<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">setState</span>()<br>\t\t<span class=\"hljs-number\">1.</span> 自身钩子函数中（componentDidMount）异步的<br>    <span class=\"hljs-number\">2.</span> 非自身的钩子函数中（定时器的回调）同步的<br>\t<span class=\"hljs-number\">3.</span> 数据流：单项<span class=\"hljs-title class_\">Model</span>---&gt;<span class=\"hljs-title class_\">View</span><br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n<li>\n<p>数据劫持代理</p>\n<ol>\n<li>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//Vue 数据底层劫持代理思想</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 模拟 Vue 中的 data 选项</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span><span class=\"token string\">'curry'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span><span class=\"token string\">'11'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 模拟组件的实例</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">let</span> _this <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 利用 Object.defineProperty ()</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> itemin data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>_this<span class=\"token punctuation\">,</span>item<span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">// 用来获取扩展属性值的，当获取该属性值的时候调用 get 方法</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">// 监事扩展属性的，只要一修改就调用</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'set()'</span><span class=\"token punctuation\">,</span>newValue<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      data<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> newValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>_this<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">// 通过 Object.defineProperty 的 get 方法添加的扩展属性不能直接对象。属性进行修改</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>_this<span class=\"token punctuation\">.</span>username <span class=\"token operator\">=</span> <span class=\"token string\">'wade'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>_this<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>code￼<span class=\"token number\">4</span><span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token number\">2.</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`javascript</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>   <span class=\"token comment\">//catch 绑定：事件绑定可以阻止冒泡事件向上冒泡</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>     <span class=\"token operator\">&lt;</span>view catchtap<span class=\"token operator\">=</span><span class=\"token string\">\"hangleTap\"</span><span class=\"token operator\">></span>阻止冒泡事件<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>code￼<span class=\"token number\">5</span><span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr></table></figure></li>\n<li>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">2.</span> <span class=\"token comment\">//index.js 文件中写方法即跳转的页面</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">toLogs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    wx<span class=\"token punctuation\">.</span><span class=\"token function\">reLaunch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/pages/logs/logs'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>code￼<span class=\"token number\">6</span><span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li>\n<p>生命周期函数 (钩子函数)</p>\n<ol>\n<li>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1.</span> <span class=\"token comment\">// 生命周期函数 -- 监听页面加载</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function-variable function\">onLoad</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2.</span> <span class=\"token comment\">// 生命周期函数 -- 监听页面初次渲染完成</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token function-variable function\">onLoad</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">3.</span> <span class=\"token comment\">// 生命周期函数 -- 监听页面显示</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function-variable function\">onShow</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">4.</span> <span class=\"token comment\">// 生命周期函数 -- 监听页面隐藏</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function-variable function\">onHide</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">5.</span> <span class=\"token comment\">// 生命周期函数 -- 监听页面卸载</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function-variable function\">onUnload</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>onLoad、onLoad页面加载未销毁时只执行一次，而onShow可以执行多次，</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>onLoad、onLoad可以发请求，onShow会多次请求影响程序性能</pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ol>\n",
            "tags": [
                "uni-app"
            ]
        },
        {
            "id": "http://example.com/2021/01/21/10001_UniApp/",
            "url": "http://example.com/2021/01/21/10001_UniApp/",
            "title": "uni-app",
            "date_published": "2021-01-21T11:32:44.000Z",
            "content_html": "<p>🌸  <span style=\"font-size:bold;color:purple\">Welcome to XGG &amp; blog!</span><br>\n🔭  <span style=\"font-size:bold;color:purple\">When you have eliminated the impossible,whatever remains,however improbable,must be the truth.</span><br>\n📫  <span style=\"font-size:initial;color:purple\">If you get any problems when looking blog,you can find the answer in <a href=\"https://juejin.cn/user/2784392994882045\">稀土掘金</a> or you can ask me on <a href=\"https://github.com/LuckyWishes\">GitHub</a>.</span></p>\n<hr />\n<h5 id=\"1-小程序定义\"><a class=\"markdownIt-Anchor\" href=\"#1-小程序定义\">#</a> 1. 小程序定义</h5>\n<ul>\n<li>体积小，下载速度快，压缩包的体积不能大于 1M，2017 年之后开始小于 2M</li>\n<li>和 APP 进行互补，提供和 APP 相同的功能，而且比较简洁；下载简单；使用频率较少，但又不得不用；连接线上和线下；开发门槛低，成本低</li>\n</ul>\n<h5 id=\"2小程序准备\"><a class=\"markdownIt-Anchor\" href=\"#2小程序准备\">#</a> 2. 小程序准备</h5>\n<ol>\n<li>官网下载安装微信 <strong>开发者工具</strong></li>\n<li>下载地址：<a href=\"https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html\">https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html</a></li>\n<li>申请注册小程序账号</li>\n</ol>\n<h5 id=\"3-知识储备了解\"><a class=\"markdownIt-Anchor\" href=\"#3-知识储备了解\">#</a> 3. 知识储备了解</h5>\n<ol>\n<li>\n<p>flex 布局学习</p>\n</li>\n<li>\n<p>移动端知识</p>\n<ol>\n<li>\n<p>物理像素（真实存在）<br>\n叫作屏幕的分辨率； 屏幕上一个发光点就是物理像素点，分辨率越高，物理像素点越多，本身像素点越小越精致，屏幕越清晰</p>\n</li>\n<li>\n<p>设备独立像素 &amp;&amp; CSS 像素（虚拟像素）</p>\n<p>屏幕大小为 4.7 英寸、5.5 英寸等（主对角线）<br>\n设备独立像素（密度无关像素）：例如：iPhone 6（375px × 667px）、iPhone 6 plus（414px × 736px）<br>\nCSS 像素（px）：可以与设备独立像素相互装换</p>\n</li>\n<li>\n<p>dpr 比 &amp; DPI&amp;PPI<br>\ndpr 比：设备像素比，物理像素 / 设备独立像素 = dpr, 一般以 iPhone 6 的 dpr 为准 dpr = 2;</p>\n<p>DPI: 最早指的是打印机在单位面积上打印的墨点数，墨点越多越清晰；</p>\n<p>PPI: 一英寸显示屏上的像素点个数</p>\n</li>\n</ol>\n</li>\n<li>\n<p>移动端的适配方案</p>\n<ol>\n<li>\n<p>viewport 适配</p>\n<ol>\n<li>为什么做 viewport 适配<br>\n手机厂商生产手机大部分默认页面宽度的为 980px<br>\n 手机实际视口宽度都要小于 980px, 如：iPhone 6 为 375x<br>\n 开发需求：需要将 980px 的页面安全显示在手机屏幕上且没有滚动条<br>\n注意：视觉视口就是手机屏幕的大小；布局视口：就是网页的大小；</li>\n<li>实现</li>\n</ol>\n<meta name=''viewport'' content=''width=device-width,initial-scale=1.0''>\nwidth：网页视口的宽度即布局视口\ndevice-width：屏幕大小即视觉视口\n把视觉视口等于布局视口\n</li>\n<li>\n<p>rem 适配（root em 根节点字体的大小）</p>\n<ol>\n<li>\n<p>机型太多，不同的机型屏幕大小不一样<br>\n需求：一套设计稿的内容在不同的机型上呈现的效果一致，根据屏幕大小不同的变化，页面中的内容也相应的变化；</p>\n</li>\n<li>\n<p>实现</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">remRefresh</span>(<span class=\"hljs-params\"></span>)&#123;<br>  <span class=\"hljs-keyword\">let</span> clientWidth = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">documentElement</span>.<span class=\"hljs-property\">clientWidth</span>;<br>  <span class=\"hljs-comment\">//将屏幕分成10等分</span><br>  <span class=\"hljs-keyword\">let</span> rem = clientWidth/<span class=\"hljs-number\">10</span>;<br>  <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">documentElement</span>.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">fontSize</span> = rem + <span class=\"hljs-string\">&#x27;px&#x27;</span>;<br>  <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">body</span>.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">fontSize</span> = <span class=\"hljs-string\">&#x27;12px&#x27;</span>;<br>&#125;<br><span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;pageshow&#x27;</span>,<span class=\"hljs-function\">() =&gt;</span>&#123;<br>  <span class=\"hljs-title function_\">remRefresh</span>();<br>&#125;)<br><span class=\"hljs-comment\">//函数防抖</span><br><span class=\"hljs-keyword\">let</span> timeoutId;<br><span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;resize&#x27;</span>,<span class=\"hljs-function\">() =&gt;</span>&#123;<br>  timeoutId &amp;&amp; <span class=\"hljs-built_in\">clearTimeout</span>(timeoutId);<br>  timeoutId = <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-function\">() =&gt;</span> &#123;<br>    <span class=\"hljs-title function_\">remRefresh</span>();<br>  &#125;,<span class=\"hljs-number\">300</span>)<br>&#125;)<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>第三方库实现<br>\n lib-flexible 和 px2rem-loader</p>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n",
            "tags": [
                "uni-app"
            ]
        }
    ]
}