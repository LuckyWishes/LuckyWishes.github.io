{
    "version": "https://jsonfeed.org/version/1",
    "title": "XGG • All posts by \"webpack\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2020/05/19/7003_Webpack/",
            "url": "http://example.com/2020/05/19/7003_Webpack/",
            "title": "Webpack",
            "date_published": "2020-05-19T05:51:54.000Z",
            "content_html": "<p>🌸  <span style=\"font-size:bold;color:purple\">Welcome to XGG &amp; blog!</span><br>\n🔭  <span style=\"font-size:bold;color:purple\">When you have eliminated the impossible,whatever remains,however improbable,must be the truth.</span><br>\n📫  <span style=\"font-size:initial;color:purple\">If you get any problems when looking blog,you can find the answer in <a href=\"https://juejin.cn/user/2784392994882045\">稀土掘金</a> or you can ask me on <a href=\"https://github.com/LuckyWishes\">GitHub</a>.</span></p>\n<hr />\n<h6 id=\"浏览器兼容性\"><a class=\"markdownIt-Anchor\" href=\"#浏览器兼容性\">#</a> 浏览器兼容性</h6>\n<ol>\n<li>browserslist 工具：查询浏览器版本，一个在不同的前端工具之间，共享目标浏览器和 Node.js 版本的配置 (Babel、Autoprefixer、postcss-preset-env 等)</li>\n<li>browserslist 编写规则\n<ol>\n<li>defaults:Browserslist 的默认浏览器</li>\n<li>5%: 通过全局使用情况统计的信息选择浏览器版本</li>\n<li>dead:24 个月没有官方支持或更新的浏览器</li>\n<li>last 2 version: 每一个浏览器的最后 2 个版本</li>\n<li>not ie &lt;=8: 排除先前查询选择的浏览器</li>\n<li>node 10: 选择最新的的 node.js 版本 (如 current node:Browserslist 现在使用的 Node.js 版本)</li>\n<li>iOS 7: 直接使用 iOS 浏览器版本 7</li>\n<li>supports es6-module: 支持特定功能的浏览器</li>\n</ol>\n</li>\n<li>browserslist 工具使用 caniuse-lite 工具进行条件查询\n<ol>\n<li><code>,</code> 、 <code>or</code> : 并集，满足一个即可</li>\n<li><code>and</code> : 交集，所有条件都要满足</li>\n<li><code>not</code> : 取反</li>\n</ol>\n</li>\n<li>在多个 browserslist 共享查询条件时，两种编写方式\n<ol>\n<li>在 <code>package.json</code>  文件里面添加字段<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-string\">&quot;browserslist&quot;</span>: [<br><span class=\"hljs-string\">&quot;&gt;1%&quot;</span>,<br><span class=\"hljs-string\">&quot;last 2 version&quot;</span>,<br><span class=\"hljs-string\">&quot;not dead&quot;</span><br>]<br></code></pre></td></tr></table></figure>\n</li>\n<li>新建 <code>.browserslistrc</code>  文件<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&gt;<span class=\"hljs-number\">1</span>%,<br>last <span class=\"hljs-number\">2</span> version,<br>not dead<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n<p>注意：浏览器版本查询的依赖网站:<a href=\"https://caniuse.com/\">https://caniuse.com/</a></p>\n<h6 id=\"postcss\"><a class=\"markdownIt-Anchor\" href=\"#postcss\">#</a> postcss</h6>\n<p>定义：一个通过 JavaScript 来转换样式的工具，但是要实现特定的功能需要借助与 postcss 相应的插件 (如自动添加浏览器前缀，css 样式重置)</p>\n<ol>\n<li>postcss 的使用\n<ol>\n<li>查找 postcss 在构建工具中的扩展，如 webpack 中的 <code>postcss-loader</code></li>\n<li>选择添加需要的 postcss 相关插件实现相应的功能</li>\n</ol>\n</li>\n<li>在命令行中使用 postcss <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-comment\">// 安装postcss工具</span><br>npm install postcss -D<br><span class=\"hljs-comment\">// 安装postcss命令行工具</span><br>npm install postcss-cli -D<br><span class=\"hljs-comment\">// 使用postcss工具对test.css文件中样式进行处理，生成目标文件result.css</span><br>npx postcss -o result.<span class=\"hljs-property\">css</span> ./src/css/test.<span class=\"hljs-property\">css</span><br><span class=\"hljs-comment\">//安装`autoprefixer`插件为了给样式添加浏览器前缀</span><br>npm install autoprefixer -D<br><span class=\"hljs-comment\">//`--use autoprefixer`指定使用特性插件</span><br>npx postcss --use autoprefixer -o result.<span class=\"hljs-property\">css</span> ./src/css/test.<span class=\"hljs-property\">css</span><br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>注意：推荐查询样式适配浏览器的网站:<a href=\"https://autoprefixer.github.io/(%E5%91%8A%E8%AF%89%E4%BD%A0%E6%98%AF%E5%90%A6%E9%9C%80%E8%A6%81%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%BA%94%E7%9A%84%E5%89%8D%E7%BC%80)\">https://autoprefixer.github.io/(告诉你是否需要添加相应的前缀)</a></p>\n<ol>\n<li>在 webpack 中使用 postcss<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-comment\">// 安装postcss工具</span><br>npm install postcss -D<br><span class=\"hljs-comment\">// 安装postcss-loader</span><br>npm install postcss-loader -D<br><span class=\"hljs-comment\">//安装`autoprefixer`插件为了给样式自动添加浏览器前缀</span><br>npm install autoprefixer -D<br><span class=\"hljs-comment\">//安装`postcss-preset-env`插件为了使CSS新特性适配大部分浏览器</span><br>npm install postcss-preset-env -D<br></code></pre></td></tr></table></figure>\n</li>\n<li><code>postcss-preset-env</code> : 讲一些现代 CSS 特性转成大多数浏览器识别的 CSS，且根据目标浏览器或者运行时环境添加所需的 <code>polyfill</code>\n<ol>\n<li><code>postcss-preset-env</code>  插件已经包含 <code>autoprefixer</code>  插件的特性 (自动为浏览器添加前缀)</li>\n<li>rgb (#000000):6 位；rgba (#00000000):8 位部分浏览器可以解析识别，最后两位表示透明度</li>\n<li>在 webpack 中使用 <code>postcss</code>  工具时，使用相同的插件时可以进行相同的 <code>插件代码抽离</code> ，只需新建文件 <code>postcss.config.js</code>  (特定文件名), 在该文件里面添加以下代码<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-comment\">//对webpack中的postcss工具使用postcss-preset-env插件配置单独抽离</span><br><span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = &#123;<br>  <span class=\"hljs-attr\">plugins</span>:[<br>    <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;postcss-preset-env&quot;</span>)<br>    <span class=\"hljs-comment\">// 该插件可以简写为以下形式，但并不是所有的插件都可以写成简写形式</span><br>    <span class=\"hljs-comment\">// &quot;postcss-preset-env&quot;</span><br>  ]<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n<h6 id=\"资源模块类型asset-module-type\"><a class=\"markdownIt-Anchor\" href=\"#资源模块类型asset-module-type\">#</a> 资源模块类型 (asset module type)</h6>\n<ol>\n<li>4 种新的模块类型\n<ol>\n<li><code>asset/resource</code> : 发送一个单独的文件并导出 URL, 相当于 <code>file-loader</code>  的作用<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&#123;<br>  <span class=\"hljs-attr\">test</span>:<span class=\"hljs-regexp\">/\\.(png|jpe?g|gif|svg)$/</span>,<br>  <span class=\"hljs-attr\">type</span>:<span class=\"hljs-string\">&quot;asset/resource&quot;</span>,<br>  <span class=\"hljs-attr\">generator</span>: &#123;<br>    <span class=\"hljs-attr\">filename</span>:<span class=\"hljs-string\">&quot;img/[name].[hash:6][ext]&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n附加：加载字体文件 (阿里图标库)  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&#123;<br>  <span class=\"hljs-attr\">test</span>:<span class=\"hljs-regexp\">/\\.ttf|eot|woff2?$/i</span>,<br>  <span class=\"hljs-attr\">type</span>:<span class=\"hljs-string\">&quot;asset/resource&quot;</span>,<br>  <span class=\"hljs-attr\">generator</span>:&#123;<br>    <span class=\"hljs-attr\">filename</span>:<span class=\"hljs-string\">&quot;font/[name].[hash:6][ext]&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><code>asset/inline</code> : 导出一个资源 data URL, 相当于 <code>url-loader</code>  的作用<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&#123;<br>  <span class=\"hljs-attr\">test</span>:<span class=\"hljs-regexp\">/\\.(png|jpe?g|gif|svg)$/</span>,<br>  <span class=\"hljs-attr\">type</span>:<span class=\"hljs-string\">&quot;asset/inline&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><code>asset/source</code> : 导出资源的源代码，相当于 <code>raw-loader</code>  的作用</li>\n<li><code>asset</code> : 在导出一个 data URL 和发送一个单独文件之间自动选择，相当于 <code>url-loader</code>  的作用，且配置资源体积限制实现 (大小图片进行筛选)<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&#123;<br>  <span class=\"hljs-attr\">test</span>:<span class=\"hljs-regexp\">/\\.(png|jpe?g|gif|svg)$/</span>,<br>  <span class=\"hljs-attr\">type</span>:<span class=\"hljs-string\">&quot;asset&quot;</span>,<br>  <span class=\"hljs-attr\">generator</span>: &#123;<br>    <span class=\"hljs-attr\">filename</span>:<span class=\"hljs-string\">&quot;img/[name].[hash:6][ext]&quot;</span><br>  &#125;,<br>  <span class=\"hljs-attr\">parser</span>:&#123;<br>    &lt;!-- <span class=\"hljs-string\">`url-loader`</span>的limit效果 --&gt;<br>    <span class=\"hljs-attr\">dataUrlCondition</span>:&#123;<br>      <span class=\"hljs-attr\">maxSize</span>:<span class=\"hljs-number\">160</span> * <span class=\"hljs-number\">1024</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n<li>将图片放入对应的文件夹里面的两种方式\n<ol>\n<li>在 <code>output</code>  中进行配置<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-attr\">output</span>: &#123;<br><span class=\"hljs-attr\">filename</span>: <span class=\"hljs-string\">&quot;bundle.js&quot;</span>,<br><span class=\"hljs-attr\">path</span>: path.<span class=\"hljs-title function_\">resolve</span>(__dirname, <span class=\"hljs-string\">&quot;build&quot;</span>),<br><span class=\"hljs-attr\">assetModuleFilename</span>:<span class=\"hljs-string\">&quot;img/[name].[hash:6][ext]&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li>在 <code>rules</code>  中配置<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&#123;<br>  <span class=\"hljs-attr\">test</span>:<span class=\"hljs-regexp\">/\\.(png|jpe?g|gif|svg)$/</span>,<br>  <span class=\"hljs-attr\">type</span>:<span class=\"hljs-string\">&quot;asset/resource&quot;</span>,<br>  <span class=\"hljs-attr\">generator</span>: &#123;<br>    <span class=\"hljs-attr\">filename</span>:<span class=\"hljs-string\">&quot;img/[name].[hash:6][ext]&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n<h6 id=\"plugin每一个plugin是一个类\"><a class=\"markdownIt-Anchor\" href=\"#plugin每一个plugin是一个类\">#</a> Plugin (每一个 plugin 是一个类)</h6>\n<ol>\n<li>定义: <code>Loader</code>  用于特定模块类型进行转换； <code>Plugin</code>  用于执行更加广泛的任务 (打包优化、资源管理、环境变量注入)</li>\n<li><code>Plugin</code>\n<ol>\n<li>安装 <code>clean-webpack-plugin</code> : 修改一些配置后自动生成 dist 文件夹进行替换<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;!-- 第一步引入需要的plugin --&gt;<br><span class=\"hljs-keyword\">const</span> &#123; <span class=\"hljs-title class_\">CleanWebpackPlugin</span> &#125; = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;clean-webpack-plugin&quot;</span>);<br>&lt;!-- 第二步使用需要的plugin --&gt;<br><span class=\"hljs-attr\">plugins</span>: [<br>  <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">CleanWebpackPlugin</span>()<br>]<br></code></pre></td></tr></table></figure>\n</li>\n<li>安装 <code>html-webpack-plugin</code> : 根据 <code>ejs模板</code> 自动生成 <code>index.js</code>  文件，并引入相关文件；ejs 模板里面可以设置 <code>options.title</code>  属性，即为生成 index 文件的标题；自定义 HTML 模板，新建 public 文件夹，在里面新建 HTML 文件，使用 <code>template</code>  进行引入即可；自定义模板数据填充，使用 <code>&lt;% 变量 %&gt;</code> ，该方式是 ejs 模板填充数据的方式<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;!-- 第一步引入需要的plugin --&gt;<br><span class=\"hljs-keyword\">const</span> &#123; <span class=\"hljs-title class_\">CleanWebpackPlugin</span> &#125; = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;clean-webpack-plugin&quot;</span>);<br>&lt;!-- 第二步使用需要的plugin --&gt;<br><span class=\"hljs-attr\">plugins</span>: [<br>  <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">CleanWebpackPlugin</span>(&#123;<br>    <span class=\"hljs-attr\">title</span>:<span class=\"hljs-string\">&quot;自定义index文件的标题名&quot;</span>,<br>    <span class=\"hljs-attr\">template</span>:<span class=\"hljs-string\">&quot;./pubilc/index.html&quot;</span><br>  &#125;)<br>]<br></code></pre></td></tr></table></figure>\n</li>\n<li>安装 <code>define-plugin</code> : 解决 <code>BASE_URL的常量</code> 无法找到问题，区分开发与生产环 境，区分 mode 模式等，允许编译时创建配置的全局常量，属于 webpack 内置插件，无需安装<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;!-- 第一步进行引入 --&gt;<br><span class=\"hljs-keyword\">const</span> &#123; <span class=\"hljs-title class_\">DefinePlugin</span> &#125; = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;webpack&quot;</span>);<br>&lt;!-- 第二步使用 --&gt;<br><span class=\"hljs-attr\">plugins</span>: [<br>  <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">CleanWebpackPlugin</span>(),<br>  <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HtmlWebpackPlugin</span>(&#123;<br>    <span class=\"hljs-attr\">title</span>:<span class=\"hljs-string\">&quot;XGG&quot;</span>,<br>    <span class=\"hljs-attr\">template</span>:<span class=\"hljs-string\">&quot;./public/index.html&quot;</span><br>  &#125;),<br>  <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">DefinePlugin</span>(&#123;<br>    <span class=\"hljs-attr\">BASE_URL</span>:<span class=\"hljs-string\">&#x27;&quot;./&quot;&#x27;</span><br>  &#125;)<br>]<br></code></pre></td></tr></table></figure>\n</li>\n<li>安装 <code>copy-webpack-plugin</code> : 将指定文件夹里面的文件复制到另一个文件夹<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-attr\">plugins</span>: [<br>  <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">CopyWebpackPlugin</span>(&#123;<br>    <span class=\"hljs-attr\">patterns</span>:[<br>      &#123;<br>        <span class=\"hljs-attr\">from</span>:<span class=\"hljs-string\">&quot;public&quot;</span>,<br>        <span class=\"hljs-comment\">// 可以省略不写，默认会复制到output中生成的文件夹</span><br>        <span class=\"hljs-comment\">// to:&quot;build&quot;,</span><br>        <span class=\"hljs-comment\">// 可以忽略不进行复制的文件</span><br>        <span class=\"hljs-attr\">globOptions</span>:&#123;<br>          <span class=\"hljs-comment\">// ignoreFiles:&quot;index.js&quot;</span><br>          <span class=\"hljs-attr\">ignore</span>:[<br>            <span class=\"hljs-string\">&quot;**/index.html&quot;</span>,<br>            <span class=\"hljs-comment\">// 若是Mac的话也需要忽略该文件,该文件是记录当前文件夹的状态信息</span><br>            <span class=\"hljs-string\">&quot;**/.DS_Store&quot;</span>,<br>            <span class=\"hljs-string\">&quot;**/test.txt&quot;</span><br>          ]<br>        &#125;<br>      &#125;<br>    ]<br>  &#125;)<br>]<br></code></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ol>\n",
            "tags": [
                "Webpack"
            ]
        },
        {
            "id": "http://example.com/2020/05/15/7002_Webpack/",
            "url": "http://example.com/2020/05/15/7002_Webpack/",
            "title": "Webpack",
            "date_published": "2020-05-15T01:01:44.000Z",
            "content_html": "<p>🌸  <span style=\"font-size:bold;color:purple\">Welcome to XGG &amp; blog!</span><br>\n🔭  <span style=\"font-size:bold;color:purple\">When you have eliminated the impossible,whatever remains,however improbable,must be the truth.</span><br>\n📫  <span style=\"font-size:initial;color:purple\">If you get any problems when looking blog,you can find the answer in <a href=\"https://juejin.cn/user/2784392994882045\">稀土掘金</a> or you can ask me on <a href=\"https://github.com/LuckyWishes\">GitHub</a>.</span></p>\n<hr />\n<h4 id=\"loader\"><a class=\"markdownIt-Anchor\" href=\"#loader\">#</a> loader</h4>\n<p>定义:loader 可以用于对模块的源代码进行转换</p>\n<ol>\n<li>css-loader 的使用方案有三种使用方案\n<ol>\n<li>内联方式<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&quot;css-loader!../css/index.css&quot;</span>;   <br></code></pre></td></tr></table></figure>\n</li>\n<li>CLI 方式 (webpack 已经不使用)<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">webpack --<span class=\"hljs-variable language_\">module</span>-bind jade-loader --<span class=\"hljs-variable language_\">module</span>-bind <span class=\"hljs-string\">&#x27;css=style-loader!css-loader&#x27;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li>配置方式 (在使用多个 loader 时需要注意，webpack 加载 loader 的顺序是从后向前加载的，从下往上，从右往左)\n<ol>\n<li><code>npm install css-loader -D</code>  安装 css-loader <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-attr\">module</span>: &#123;<br>  <span class=\"hljs-attr\">rules</span>: [<br>    &#123;<br>      <span class=\"hljs-comment\">// 匹配相关文件资源，规则使用正则表达式编写</span><br>      <span class=\"hljs-attr\">test</span>:<span class=\"hljs-regexp\">/\\.css$/i</span>,<br>      <span class=\"hljs-comment\">// 使用相对应loader进行解析相应的模块</span><br>      <span class=\"hljs-comment\">// loader:&quot;css-loader&quot;</span><br>      <span class=\"hljs-comment\">// use:&quot;css-loader&quot;</span><br>      <span class=\"hljs-attr\">use</span>:[<br>        &#123;<span class=\"hljs-attr\">loader</span>:<span class=\"hljs-string\">&quot;style-loader&quot;</span>&#125;,<br>        &#123;<span class=\"hljs-attr\">loader</span>:<span class=\"hljs-string\">&quot;css-loader&quot;</span>&#125;<br>      ]<br>    &#125;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n<li><code>css-loader的importLoaders属性</code><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-attr\">module</span>: &#123;<br>  <span class=\"hljs-attr\">rules</span>: [<br>    &#123;<br>      <span class=\"hljs-attr\">test</span>:<span class=\"hljs-regexp\">/\\.css$/i</span>,<br>      <span class=\"hljs-attr\">use</span>:[<br>        &#123;<span class=\"hljs-attr\">loader</span>:<span class=\"hljs-string\">&quot;style-loader&quot;</span>&#125;,<br>        &#123;<br>          <span class=\"hljs-attr\">loader</span>:<span class=\"hljs-string\">&quot;css-loader&quot;</span>,<br>          <span class=\"hljs-attr\">options</span>:&#123;<br>            <span class=\"hljs-attr\">importLoaders</span>:<span class=\"hljs-number\">1</span><br>          &#125;<br>        &#125;,<br>        &#123;<span class=\"hljs-attr\">loader</span>:<span class=\"hljs-string\">&quot;postcss-loader&quot;</span>&#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class=\"hljs-attr\">test</span>: <span class=\"hljs-regexp\">/\\.less$/i</span>,<br>      <span class=\"hljs-attr\">use</span>:[<br>        &#123;<span class=\"hljs-attr\">loader</span>:<span class=\"hljs-string\">&quot;style-loader&quot;</span>&#125;,<br>        &#123;<br>          <span class=\"hljs-attr\">loader</span>:<span class=\"hljs-string\">&quot;css-loader&quot;</span>,<br>          <span class=\"hljs-attr\">options</span>:&#123;<br>            <span class=\"hljs-attr\">importLoaders</span>:<span class=\"hljs-number\">2</span><br>          &#125;<br>        &#125;,<br>        &#123;<span class=\"hljs-attr\">loader</span>:<span class=\"hljs-string\">&quot;postcss-loader&quot;</span>&#125;,<br>        &#123;<span class=\"hljs-attr\">loader</span>:<span class=\"hljs-string\">&quot;less-loader&quot;</span>&#125;<br>      ]<br>    &#125;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n<blockquote>\n<p>注意：出现 CSS 文件嵌套引用时，需要使用 <code>importLoaders</code>  属性，因为 webpack 加载 loader 的顺序是从后往前，使用该属性后可以重新倒回去再次使用后面的 loader，使用的数量根据属性值决定</p>\n</blockquote>\n<ol start=\"2\">\n<li>style-loader 的使用\n<ol>\n<li><code>npm install style-loader -D</code>  安装 style-loader</li>\n<li>使用 <code>document.createElement(style)</code>  方式在 head 中创建 style 标签，使用 css 嵌入方式编写样式</li>\n</ol>\n</li>\n<li>less-loader 的使用\n<ol>\n<li><code>npm install less -D</code>  安装 less 工具，实现 <code>less</code>  转换为 <code>css</code></li>\n<li><code>npm install less-loader -D</code>  安装 less-loader</li>\n<li>webpack.config.js 编写 loader<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-attr\">module</span>: &#123;<br>  <span class=\"hljs-attr\">rules</span>: [<br>    &#123;<br>      <span class=\"hljs-attr\">test</span>: <span class=\"hljs-regexp\">/\\.less$/i</span>,<br>      <span class=\"hljs-attr\">use</span>:[<br>        &#123;<span class=\"hljs-attr\">loader</span>:<span class=\"hljs-string\">&quot;style-loader&quot;</span>&#125;,<br>        &#123;<span class=\"hljs-attr\">loader</span>:<span class=\"hljs-string\">&quot;css-loader&quot;</span>&#125;,<br>        &#123;<span class=\"hljs-attr\">loader</span>:<span class=\"hljs-string\">&quot;less-loader&quot;</span>&#125;<br>      ]<br>    &#125;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n<li>file-loader 的使用\n<ol>\n<li><code>npm install file-loader -D</code>  安装 file-loader, 处理 <code>png</code> 、 <code>jpg</code>  等格式的图片，处理 <code>import/require()方式</code> 引入的文件资源，且会将该资源放到输出的文件夹中</li>\n<li>引入图片的两种形式  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;!-- 第一种方式 --&gt;<br><span class=\"hljs-keyword\">import</span> 图片名 <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;图片路径&quot;</span>;<br>&lt;!-- 第二种方式 --&gt;<br>background-<span class=\"hljs-attr\">image</span>:<span class=\"hljs-title function_\">url</span>(文件路径);<br></code></pre></td></tr></table></figure>\n</li>\n<li><code>img</code>  文件夹里面的图片经过 <code>MD4算法(散列函数处理)|(摘要算法:提取文件名核心值)</code>  生成 128bit 比特位哈希值路径 (32 个十六进制)</li>\n<li>文件名和文件路径设置<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&#123;<br>  <span class=\"hljs-attr\">test</span>:<span class=\"hljs-regexp\">/\\.(png|jpe?g|gif|svg)$/</span>,<br>  <span class=\"hljs-attr\">use</span>:[<br>    &#123;<br>      <span class=\"hljs-attr\">loader</span>:<span class=\"hljs-string\">&quot;file-loader&quot;</span>,<br>      <span class=\"hljs-attr\">options</span>:&#123;<br>        <span class=\"hljs-comment\">// 使用占位符placeholder,name:&quot;[placeholder]&quot;</span><br>        <span class=\"hljs-attr\">name</span>:<span class=\"hljs-string\">&quot;img/[name].[hash:8].[ext]&quot;</span>,<br>        <span class=\"hljs-comment\">// outputPath:&quot;img&quot;,</span><br>        <span class=\"hljs-attr\">esModule</span>:<span class=\"hljs-literal\">false</span><br>      &#125;<br>    &#125;<br>  ],<br>  <span class=\"hljs-attr\">type</span>:<span class=\"hljs-string\">&quot;javascript/auto&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li>常用的 placeholder\n<ol>\n<li><code>[ext]</code> : 处理文件的扩展名</li>\n<li><code>[name]</code> : 处理文件的名称</li>\n<li><code>[hash]</code> : 文件的内容，使用 MD4 散列算法处理</li>\n<li><code>[contentHash]</code> : 在 file-loader 中效果和 <code>[hash]</code>  结果一致，其他可能会不同</li>\n<li><code>[hash:&lt;length&gt;]</code> : 截取 hash 长度，默认 32 个字符太长</li>\n<li><code>[path]</code> : 文件相对于 webpack 配置文件的路径</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>url-loader 的使用\n<ol>\n<li><code>npm install url-loader -D</code>  安装 url-loader</li>\n<li>工作方式与 <code>file-loader</code>  相似，但是可以将较小的文件转成 base64 的 URI (base64 data)</li>\n<li>注意：小图片转换 base64 和页面直接一起请求，减少不必要的请求过程；大图片直接使用图片即可，若大图片也进行转换会影响页面的请求速度</li>\n<li><code>limit属性</code> 图片大小的最大值，小于该值就可以转换为 base64 嵌入打包文件里面，单位是字节 (Byte)<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&#123;<br>  <span class=\"hljs-attr\">test</span>:<span class=\"hljs-regexp\">/\\.(png|jpe?g|gif|svg)$/</span>,<br>  <span class=\"hljs-attr\">use</span>:[<br>    &#123;<br>      <span class=\"hljs-attr\">loader</span>:<span class=\"hljs-string\">&quot;url-loader&quot;</span>,<br>      <span class=\"hljs-attr\">options</span>:&#123;<br>        <span class=\"hljs-attr\">name</span>:<span class=\"hljs-string\">&quot;img/[name].[hash:8].[ext]&quot;</span>,<br>        <span class=\"hljs-attr\">limit</span>:<span class=\"hljs-number\">160</span> * <span class=\"hljs-number\">1024</span>,<br>        <span class=\"hljs-attr\">esModule</span>:<span class=\"hljs-literal\">false</span><br>      &#125;<br>    &#125;<br>  ],<br>  <span class=\"hljs-attr\">type</span>:<span class=\"hljs-string\">&quot;javascript/auto&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<code>raw-loader</code> : 将一些内容转换为字符串</li>\n</ol>\n</li>\n</ol>\n",
            "tags": [
                "Webpack"
            ]
        },
        {
            "id": "http://example.com/2020/05/11/7001_Webpack/",
            "url": "http://example.com/2020/05/11/7001_Webpack/",
            "title": "Webpack",
            "date_published": "2020-05-11T07:31:44.000Z",
            "content_html": "<p>🌸  <span style=\"font-size:bold;color:purple\">Welcome to XGG &amp; blog!</span><br>\n🔭  <span style=\"font-size:bold;color:purple\">When you have eliminated the impossible,whatever remains,however improbable,must be the truth.</span><br>\n📫  <span style=\"font-size:initial;color:purple\">If you get any problems when looking blog,you can find the answer in <a href=\"https://juejin.cn/user/2784392994882045\">稀土掘金</a> or you can ask me on <a href=\"https://github.com/LuckyWishes\">GitHub</a>.</span></p>\n<hr />\n<h6 id=\"1webpack定义\"><a class=\"markdownIt-Anchor\" href=\"#1webpack定义\">#</a> 1.webpack 定义</h6>\n<p>webpack: 一个用于现代 JavaScript 应用程序的静态模块打包工具</p>\n<h6 id=\"2webpack与webpack-cli关系\"><a class=\"markdownIt-Anchor\" href=\"#2webpack与webpack-cli关系\">#</a> 2.webpack 与 webpack-cli 关系</h6>\n<blockquote>\n<p>webpack -&gt; node_modules/.bin 下 webpack -&gt; 依赖 webpack-cli 的 runCli 函数 -&gt; 依赖 webpack 打包<br>\n注意：CLI:command line interface (命令行接口)<br>\n 注意：可以越过 webpack-cli, 使用以下语句即可手动调用 webpack，一些框架中就是这样使用进行调用，比如 React、Vue 等</p>\n</blockquote>\n  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> webpack =  <span class=\"hljs-built_in\">require</span>(webpack);<br><span class=\"hljs-keyword\">const</span> com = <span class=\"hljs-title function_\">webpack</span>(config);<br></code></pre></td></tr></table></figure>\n<h6 id=\"3webpack安装\"><a class=\"markdownIt-Anchor\" href=\"#3webpack安装\">#</a> 3.webpack 安装</h6>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">npm install webpack webpack-cli -g 全局安装 <br>npm install webpack webpack-cli -D 局部安装<br></code></pre></td></tr></table></figure>\n<p>注意: <code>-D</code>  是 <code>--dev-save</code>  缩写</p>\n<h6 id=\"4打包编译\"><a class=\"markdownIt-Anchor\" href=\"#4打包编译\">#</a> 4. 打包编译</h6>\n<p>webapck 执行流程：执行 <code>webpack</code>  命令后，会寻找当前目录下 src/index.js 文件作为入口<br>\n使用 <code>npm init</code>  命令生成 package.json 配置文件，若添加 - y 则无需进行手动设置，自动生成 package.json 文件</p>\n<h6 id=\"5使用局部本地webpack打包方法3种\"><a class=\"markdownIt-Anchor\" href=\"#5使用局部本地webpack打包方法3种\">#</a> 5. 使用局部 (本地) webpack 打包方法 (3 种)</h6>\n<ol>\n<li>使用 <code>./node_modules/.bin/webpack</code>  命令</li>\n<li>使用 <code>npx webpack</code>  命令，(npx: 直接执行 node_modules 文件中的命令 (文件))</li>\n<li>package.json 文件里面配置以下语句，使用 <code>npm run build</code>  即可 <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-string\">&quot;scripts&quot;</span>: &#123;<br>  <span class=\"hljs-string\">&quot;build&quot;</span>: <span class=\"hljs-string\">&quot;webpack&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>注意：如果局部没有安装 webpack，那么在执行的时候就寻找全局的 webpack</p>\n<h6 id=\"6指定入口文件\"><a class=\"markdownIt-Anchor\" href=\"#6指定入口文件\">#</a> 6. 指定入口文件</h6>\n<ol>\n<li>使用 <code>npx webapck --entry ./src/main.js --output-path ./build</code>  指定入口文件为 src 文件夹里 main.js 文件，打包生成文件夹 build (较为复杂)</li>\n<li>指定入口和出口的两种方式\n<ol>\n<li>在 package.json 文件里配置<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-string\">&quot;scripts&quot;</span>: &#123;<br>  <span class=\"hljs-string\">&quot;build&quot;</span>: <span class=\"hljs-string\">&quot;webpack --entry ./src/main.js --output-path ./build&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n<li>新建 webpack.config.js 文件，添加相关配置 <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;!-- 导入node里内置的path模块 --&gt;<br><span class=\"hljs-keyword\">const</span> path = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;path&#x27;</span>);<br><span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = &#123;<br>  <span class=\"hljs-attr\">entry</span>:<span class=\"hljs-string\">&quot;./src/main.js&quot;</span>,<br>  <span class=\"hljs-attr\">output</span>: &#123;<br>    <span class=\"hljs-attr\">filename</span>:<span class=\"hljs-string\">&quot;bundle.js&quot;</span>,<br>    &lt;!-- path只能填写绝对路径 --&gt;<br>    &lt;!-- <span class=\"hljs-string\">`path.resolve(__dirname,&quot;&quot;)`</span>可以获取当前文件的绝对路径，与第二个参数进行拼接获取完整的绝对路径 --&gt;<br>    <span class=\"hljs-attr\">path</span>:path.<span class=\"hljs-title function_\">resolve</span>(__dirname,<span class=\"hljs-string\">&quot;./build&quot;</span>)<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<h6 id=\"7手动指定webpack配置文件\"><a class=\"markdownIt-Anchor\" href=\"#7手动指定webpack配置文件\">#</a> 7. 手动指定 webpack 配置文件</h6>\n<p>当执行 <code>npm run build</code>  命令后就会执行 package.json 文件中 <code>&quot;script&quot;:&#123;&quot;build&quot;:&quot;webpack&quot;&#125;</code> , 然后会查看当前文件夹下面有没有 webpack.config.js 文件，如果有就会依赖该文件进行编译执行；如果没有的话就会寻找 <code>src/index.js</code>  文件<br>\n手动指定 webpack 配置文件代码如下</p>\n  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-string\">&quot;scripts&quot;</span>: &#123;<br>  <span class=\"hljs-string\">&quot;build&quot;</span>: <span class=\"hljs-string\">&quot;webpack --config ./webpack.config.js&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>",
            "tags": [
                "Webpack"
            ]
        }
    ]
}